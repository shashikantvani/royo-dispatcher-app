import { NativeModules } from "react-native";
import { HapticFeedbackTypes } from "./types";
export * from "./types";
const defaultOptions = {
    enableVibrateFallback: false,
    ignoreAndroidSystemSettings: false,
};
class RNReactNativeHapticFeedback {
    static trigger = (type = HapticFeedbackTypes.selection, options = {}) => {
        const triggerOptions = createTriggerOptions(options);
        try {
            const isTurboModuleEnabled = global.__turboModuleProxy != null;
            const hapticFeedback = isTurboModuleEnabled
                ? require("./NativeHapticFeedback").default
                : NativeModules.RNHapticFeedback;
            hapticFeedback.trigger(type, triggerOptions);
        }
        catch (err) {
            console.warn("RNReactNativeHapticFeedback is not available");
        }
    };
}
const createTriggerOptions = (options) => {
    // if options is a boolean we're using an api <=1.6 and we should pass use it to set the enableVibrateFallback option
    if (typeof options === "boolean") {
        return {
            ...defaultOptions,
            enableVibrateFallback: options,
        };
    }
    else {
        return { ...defaultOptions, ...options };
    }
};
export const trigger = RNReactNativeHapticFeedback.trigger;
export default RNReactNativeHapticFeedback;
//# sourceMappingURL=index.js.map