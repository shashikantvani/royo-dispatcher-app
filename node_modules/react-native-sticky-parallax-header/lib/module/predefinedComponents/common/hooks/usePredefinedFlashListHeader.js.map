{"version":3,"sources":["usePredefinedFlashListHeader.tsx"],"names":["useMemo","StyleSheet","useWindowDimensions","useResponsiveSize","useStickyHeaderFlashListScrollProps","usePredefinedFlashListHeader","props","height","responsiveHeight","onMomentumScrollEnd","onScroll","onScrollEndDrag","scrollHeight","scrollValue","scrollViewRef","contentContainerStyle","headerHeight","parallaxHeight","innerScrollHeight","contentBackgroundColor","contentContainerFlattenedStyle","flatten","backgroundColor"],"mappings":"AACA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,UAAT,EAAqBC,mBAArB,QAAgD,cAAhD;AAEA,SAASC,iBAAT,QAAkC,kCAAlC;AACA,SAASC,mCAAT,QAAoD,kEAApD;AAGA;AACA,OAAO,SAASC,4BAAT,CACLC,KADK,EAEL;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAaL,mBAAmB,EAAtC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAuBL,iBAAiB,EAA9C;AAEA,QAAM;AACJM,IAAAA,mBADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,eAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA,WALI;AAMJC,IAAAA;AANI,MAOFV,mCAAmC,CAAIE,KAAJ,CAPvC;AASA,QAAM;AACJS,IAAAA,qBADI;AAEJC,IAAAA,YAAY,GAAG,GAFX;AAGJC,IAAAA,cAAc,GAAGT,gBAAgB,CAAC,EAAD;AAH7B,MAIFF,KAJJ;AAMA,QAAMY,iBAAiB,GAAGX,MAAM,GAAGS,YAAT,GAAwBC,cAAlD;AAEA,QAAM;AAAEE,IAAAA;AAAF,MAA6BnB,OAAO,CAAC,MAAM;AAC/C,UAAMoB,8BAA8B,GAAGnB,UAAU,CAACoB,OAAX,CAAmBN,qBAAnB,CAAvC;AAEA,WAAO;AAAEI,MAAAA,sBAAsB,EAAEC,8BAAF,aAAEA,8BAAF,uBAAEA,8BAA8B,CAAEE;AAA1D,KAAP;AACD,GAJyC,EAIvC,CAACP,qBAAD,CAJuC,CAA1C;AAMA,SAAO;AACLI,IAAAA,sBADK;AAELD,IAAAA,iBAFK;AAGLT,IAAAA,mBAHK;AAILC,IAAAA,QAJK;AAKLC,IAAAA,eALK;AAMLM,IAAAA,cANK;AAOLL,IAAAA,YAPK;AAQLC,IAAAA,WARK;AASLC,IAAAA;AATK,GAAP;AAWD","sourcesContent":["import type { FlashList } from '@shopify/flash-list';\nimport { useMemo } from 'react';\nimport { StyleSheet, useWindowDimensions } from 'react-native';\n\nimport { useResponsiveSize } from '../../../hooks/useResponsiveSize';\nimport { useStickyHeaderFlashListScrollProps } from '../../../primitiveComponents/useStickyHeaderFlashListScrollProps';\nimport type { SharedPredefinedProps } from '../SharedProps';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function usePredefinedFlashListHeader<T extends FlashList<any>>(\n  props: SharedPredefinedProps\n) {\n  const { height } = useWindowDimensions();\n  const { responsiveHeight } = useResponsiveSize();\n\n  const {\n    onMomentumScrollEnd,\n    onScroll,\n    onScrollEndDrag,\n    scrollHeight,\n    scrollValue,\n    scrollViewRef,\n  } = useStickyHeaderFlashListScrollProps<T>(props);\n\n  const {\n    contentContainerStyle,\n    headerHeight = 100,\n    parallaxHeight = responsiveHeight(53),\n  } = props;\n\n  const innerScrollHeight = height - headerHeight - parallaxHeight;\n\n  const { contentBackgroundColor } = useMemo(() => {\n    const contentContainerFlattenedStyle = StyleSheet.flatten(contentContainerStyle);\n\n    return { contentBackgroundColor: contentContainerFlattenedStyle?.backgroundColor };\n  }, [contentContainerStyle]);\n\n  return {\n    contentBackgroundColor,\n    innerScrollHeight,\n    onMomentumScrollEnd,\n    onScroll,\n    onScrollEndDrag,\n    parallaxHeight,\n    scrollHeight,\n    scrollValue,\n    scrollViewRef,\n  };\n}\n"]}