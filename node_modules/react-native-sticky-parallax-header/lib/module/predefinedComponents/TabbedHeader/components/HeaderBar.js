import * as React from 'react';
import Animated, { useAnimatedStyle } from 'react-native-reanimated';
import { SafeAreaView } from 'react-native-safe-area-context';
import { commonStyles } from '../../../constants';
import { parseAnimatedColorProp } from '../../common/utils/parseAnimatedColorProp';
export const HeaderBar = ({
  backgroundColor,
  enableSafeAreaTopInset,
  logo,
  logoResizeMode,
  logoStyle,
  logoContainerStyle
}) => {
  const wrapperAnimatedStyle = useAnimatedStyle(() => {
    return {
      // TypeScript complains about AnimatedNode<StyleProp<ViewStyle>> from reanimated v1
      backgroundColor: parseAnimatedColorProp(backgroundColor)
    };
  }, [backgroundColor]);
  const safeAreaEdges = ['left', 'right'];

  if (enableSafeAreaTopInset) {
    safeAreaEdges.push('top');
  }

  return (
    /*#__PURE__*/
    // @ts-ignore
    React.createElement(SafeAreaView, {
      edges: safeAreaEdges,
      style: commonStyles.container
    }, /*#__PURE__*/React.createElement(Animated.View, {
      style: [commonStyles.headerWrapper, logoContainerStyle, wrapperAnimatedStyle]
    }, /*#__PURE__*/React.createElement(Animated.Image, {
      resizeMode: logoResizeMode,
      source: logo,
      style: [commonStyles.logo, logoStyle]
    })))
  );
};
//# sourceMappingURL=HeaderBar.js.map