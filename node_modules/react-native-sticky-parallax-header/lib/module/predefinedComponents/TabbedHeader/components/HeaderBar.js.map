{"version":3,"sources":["HeaderBar.tsx"],"names":["React","Animated","useAnimatedStyle","SafeAreaView","commonStyles","parseAnimatedColorProp","HeaderBar","backgroundColor","enableSafeAreaTopInset","logo","logoResizeMode","logoStyle","logoContainerStyle","wrapperAnimatedStyle","safeAreaEdges","push","container","headerWrapper"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAQA,OAAOC,QAAP,IAAmBC,gBAAnB,QAA2C,yBAA3C;AAEA,SAASC,YAAT,QAA6B,gCAA7B;AAEA,SAASC,YAAT,QAA6B,oBAA7B;AAEA,SAASC,sBAAT,QAAuC,2CAAvC;AAWA,OAAO,MAAMC,SAAmC,GAAG,CAAC;AAClDC,EAAAA,eADkD;AAElDC,EAAAA,sBAFkD;AAGlDC,EAAAA,IAHkD;AAIlDC,EAAAA,cAJkD;AAKlDC,EAAAA,SALkD;AAMlDC,EAAAA;AANkD,CAAD,KAO7C;AACJ,QAAMC,oBAAoB,GAAGX,gBAAgB,CAAC,MAAM;AAClD,WAAO;AACL;AACAK,MAAAA,eAAe,EAAEF,sBAAsB,CAACE,eAAD;AAFlC,KAAP;AAID,GAL4C,EAK1C,CAACA,eAAD,CAL0C,CAA7C;AAMA,QAAMO,aAAqB,GAAG,CAAC,MAAD,EAAS,OAAT,CAA9B;;AAEA,MAAIN,sBAAJ,EAA4B;AAC1BM,IAAAA,aAAa,CAACC,IAAd,CAAmB,KAAnB;AACD;;AAED;AAAA;AACE;AACA,wBAAC,YAAD;AAAc,MAAA,KAAK,EAAED,aAArB;AAAoC,MAAA,KAAK,EAAEV,YAAY,CAACY;AAAxD,oBACE,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,KAAK,EAAE,CAACZ,YAAY,CAACa,aAAd,EAA6BL,kBAA7B,EAAiDC,oBAAjD;AAAtB,oBACE,oBAAC,QAAD,CAAU,KAAV;AACE,MAAA,UAAU,EAAEH,cADd;AAEE,MAAA,MAAM,EAAED,IAFV;AAGE,MAAA,KAAK,EAAE,CAACL,YAAY,CAACK,IAAd,EAAoBE,SAApB;AAHT,MADF,CADF;AAFF;AAYD,CAhCM","sourcesContent":["import * as React from 'react';\nimport type {\n  ImageResizeMode,\n  ImageSourcePropType,\n  ImageStyle,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\nimport Animated, { useAnimatedStyle } from 'react-native-reanimated';\nimport type { Edge } from 'react-native-safe-area-context';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nimport { commonStyles } from '../../../constants';\nimport type { AnimatedColorProp } from '../../common/SharedProps';\nimport { parseAnimatedColorProp } from '../../common/utils/parseAnimatedColorProp';\n\ninterface HeaderBarProps {\n  backgroundColor?: AnimatedColorProp;\n  enableSafeAreaTopInset?: boolean;\n  logo: ImageSourcePropType;\n  logoContainerStyle?: StyleProp<Animated.AnimateStyle<ViewStyle>>;\n  logoResizeMode?: ImageResizeMode;\n  logoStyle?: StyleProp<Animated.AnimateStyle<ImageStyle>>;\n}\n\nexport const HeaderBar: React.FC<HeaderBarProps> = ({\n  backgroundColor,\n  enableSafeAreaTopInset,\n  logo,\n  logoResizeMode,\n  logoStyle,\n  logoContainerStyle,\n}) => {\n  const wrapperAnimatedStyle = useAnimatedStyle(() => {\n    return {\n      // TypeScript complains about AnimatedNode<StyleProp<ViewStyle>> from reanimated v1\n      backgroundColor: parseAnimatedColorProp(backgroundColor) as string,\n    };\n  }, [backgroundColor]);\n  const safeAreaEdges: Edge[] = ['left', 'right'];\n\n  if (enableSafeAreaTopInset) {\n    safeAreaEdges.push('top');\n  }\n\n  return (\n    // @ts-ignore\n    <SafeAreaView edges={safeAreaEdges} style={commonStyles.container}>\n      <Animated.View style={[commonStyles.headerWrapper, logoContainerStyle, wrapperAnimatedStyle]}>\n        <Animated.Image\n          resizeMode={logoResizeMode}\n          source={logo}\n          style={[commonStyles.logo, logoStyle]}\n        />\n      </Animated.View>\n    </SafeAreaView>\n  );\n};\n"]}