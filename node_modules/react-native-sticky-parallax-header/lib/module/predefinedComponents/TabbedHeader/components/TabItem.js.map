{"version":3,"sources":["TabItem.tsx"],"names":["React","I18nManager","Platform","Pressable","StyleSheet","Animated","colors","TabItem","tab","page","onTabLayout","onTabPress","tabWrapperStyle","tabTextActiveStyle","tabTextContainerActiveStyle","tabTextContainerStyle","tabTextStyle","activeTab","renderIcon","isInvertedAndroid","OS","isRTL","undefined","isTabActive","tabKey","title","tabTestID","testID","pressed","styles","inversionStyle","tabsWrapper","noMargins","tabContainer","icon","tabText","create","transform","scaleX","marginHorizontal","paddingHorizontal","opacity","alignItems","flexDirection","justifyContent","fontSize","lineHeight","paddingVertical","color","white","textAlign","flex","backgroundColor","transparent","borderRadius","darkMint"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport type { LayoutChangeEvent } from 'react-native';\nimport { I18nManager, Platform, Pressable, StyleSheet } from 'react-native';\nimport Animated from 'react-native-reanimated';\n\nimport { colors } from '../../../constants';\nimport type { Tab, TabsConfig } from '../../common/SharedProps';\n\ninterface TabItemProps\n  extends Pick<\n    TabsConfig,\n    | 'tabTextActiveStyle'\n    | 'tabTextContainerActiveStyle'\n    | 'tabTextContainerStyle'\n    | 'tabTextStyle'\n    | 'tabWrapperStyle'\n  > {\n  tab: Tab;\n  page: number;\n  activeTab: number;\n  onTabLayout?: (event: LayoutChangeEvent) => void;\n  onTabPress?: () => void;\n  renderIcon: (icon: Tab['icon'], page: number) => React.ReactElement | null | undefined;\n}\n\nexport const TabItem: React.FC<TabItemProps> = ({\n  tab,\n  page,\n  onTabLayout,\n  onTabPress,\n  tabWrapperStyle,\n  tabTextActiveStyle,\n  tabTextContainerActiveStyle,\n  tabTextContainerStyle,\n  tabTextStyle,\n  activeTab,\n  renderIcon,\n}) => {\n  const isInvertedAndroid = Platform.OS === 'android' ? I18nManager.isRTL : undefined;\n  const isTabActive = activeTab === page;\n  const tabKey = tab.title || `tab ${page}`;\n  const tabTestID = tab.testID || `${tabKey}TestID`;\n\n  return (\n    <Pressable\n      accessibilityLabel={tabKey}\n      accessibilityRole=\"button\"\n      key={tabKey}\n      onLayout={onTabLayout}\n      onPress={onTabPress}\n      style={({ pressed }) => [\n        isInvertedAndroid && styles.inversionStyle,\n        styles.tabsWrapper,\n        tabWrapperStyle,\n        styles.noMargins,\n        pressed && styles.pressed,\n      ]}\n      testID={tabTestID}>\n      <Animated.View\n        style={[\n          styles.tabContainer,\n          styles.tabTextContainerStyle,\n          tabTextContainerStyle,\n          isTabActive && styles.tabTextContainerActiveStyle,\n          isTabActive && tabTextContainerActiveStyle,\n        ]}>\n        {renderIcon(tab.icon, page)}\n        {tab.title ? (\n          <Animated.Text style={[styles.tabText, tabTextStyle, isTabActive && tabTextActiveStyle]}>\n            {tab.title}\n          </Animated.Text>\n        ) : null}\n      </Animated.View>\n    </Pressable>\n  );\n};\n\nconst styles = StyleSheet.create({\n  inversionStyle: {\n    transform: [{ scaleX: -1 }],\n  },\n  noMargins: {\n    marginHorizontal: 0,\n    paddingHorizontal: 0,\n  },\n  pressed: {\n    opacity: 0.9,\n  },\n  tabContainer: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  tabText: {\n    fontSize: 16,\n    lineHeight: 20,\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    color: colors.white,\n    textAlign: 'left',\n  },\n  tabsWrapper: {\n    flex: 1,\n    paddingVertical: 12,\n  },\n  tabTextContainerStyle: {\n    backgroundColor: colors.transparent,\n    borderRadius: 18,\n  },\n  tabTextContainerActiveStyle: {\n    backgroundColor: colors.darkMint,\n  },\n});\n"]}