{"version":3,"sources":["HeaderForeground.tsx"],"names":["React","StyleSheet","View","useWindowDimensions","Animated","Extrapolate","interpolate","useAnimatedStyle","colors","commonStyles","constants","useResponsiveSize","useRTLStyles","scrollPosition","Foreground","foregroundImage","height","scrollValue","title","titleStyle","titleTestID","responsiveWidth","windowHeight","width","windowWidth","isLandscape","breakpoints","mediumPhoneShorterEdge","profilePicBorderRadius","messageStyle","styles","message","startSize","endSize","startImgFade","finishImgFade","startImgSize","finishImgSize","startTitleFade","finishTitleFade","imageOpacityAnimatedStyle","opacity","value","CLAMP","imageAnimatedStyle","imageSize","borderRadius","titleAnimatedStyle","landscapeStyle","row","rowReverse","foregroundRow","foreground","column","messageContainer","create","color","white","fontSize","fontWeight","lineHeight","letterSpacing","textAlign"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport type { ImageSourcePropType, StyleProp, TextStyle, ViewStyle } from 'react-native';\nimport { StyleSheet, View, useWindowDimensions } from 'react-native';\nimport Animated, { Extrapolate, interpolate, useAnimatedStyle } from 'react-native-reanimated';\n\nimport { colors, commonStyles, constants } from '../../../constants';\nimport { useResponsiveSize } from '../../../hooks/useResponsiveSize';\nimport { useRTLStyles } from '../../common/hooks/useRTLStyles';\nimport { scrollPosition } from '../../common/utils/scrollPosition';\n\ninterface ForegroundProps {\n  foregroundImage?: ImageSourcePropType;\n  height: number;\n  scrollValue: Animated.SharedValue<number>;\n  title?: string;\n  titleStyle?: StyleProp<Animated.AnimateStyle<TextStyle>>;\n  titleTestID?: string;\n}\n\nexport const Foreground: React.FC<ForegroundProps> = ({\n  foregroundImage,\n  height,\n  scrollValue,\n  title,\n  titleStyle,\n  titleTestID = 'TabbedHeaderForegroundTitleTestID',\n}) => {\n  const { responsiveWidth } = useResponsiveSize();\n  const { height: windowHeight, width: windowWidth } = useWindowDimensions();\n\n  const isLandscape =\n    windowWidth > windowHeight && windowHeight <= constants.breakpoints.mediumPhoneShorterEdge;\n\n  const profilePicBorderRadius = responsiveWidth(4.5);\n  const messageStyle = [styles.message, titleStyle];\n  const startSize = responsiveWidth(18);\n  const endSize = responsiveWidth(10);\n  const [startImgFade, finishImgFade] = [scrollPosition(height, 22), scrollPosition(height, 27)];\n  const [startImgSize, finishImgSize] = [scrollPosition(height, 20), scrollPosition(height, 30)];\n  const [startTitleFade, finishTitleFade] = [\n    scrollPosition(height, 25),\n    scrollPosition(height, 45),\n  ];\n\n  const imageOpacityAnimatedStyle = useAnimatedStyle(() => {\n    return {\n      opacity: interpolate(\n        scrollValue.value,\n        [0, startImgFade, finishImgFade],\n        [1, 1, 0],\n        Extrapolate.CLAMP\n      ),\n    };\n  }, [scrollValue, startImgFade, finishImgFade]);\n  const imageAnimatedStyle = useAnimatedStyle(() => {\n    const imageSize = interpolate(\n      scrollValue.value,\n      [0, startImgSize, finishImgSize],\n      [startSize, startSize, endSize],\n      Extrapolate.CLAMP\n    );\n\n    return {\n      borderRadius: profilePicBorderRadius,\n      height: imageSize,\n      width: imageSize,\n    };\n  }, [scrollValue, startImgSize, finishImgSize, startSize, endSize, profilePicBorderRadius]);\n  const titleAnimatedStyle = useAnimatedStyle(() => {\n    return {\n      opacity: interpolate(\n        scrollValue.value,\n        [0, startTitleFade, finishTitleFade],\n        [1, 1, 0],\n        Extrapolate.CLAMP\n      ),\n    };\n  }, [scrollValue, startTitleFade, finishTitleFade]);\n\n  const landscapeStyle = useRTLStyles<ViewStyle>(\n    commonStyles.row,\n    commonStyles.rowReverse,\n    commonStyles.row\n  );\n\n  return (\n    <View\n      pointerEvents=\"none\"\n      style={\n        isLandscape\n          ? [commonStyles.foregroundRow, landscapeStyle]\n          : [commonStyles.foreground, commonStyles.column]\n      }>\n      {foregroundImage ? (\n        <Animated.View style={imageOpacityAnimatedStyle}>\n          <Animated.Image source={foregroundImage} style={imageAnimatedStyle} />\n        </Animated.View>\n      ) : null}\n      <Animated.View style={[commonStyles.messageContainer, titleAnimatedStyle]}>\n        <Animated.Text style={messageStyle} testID={titleTestID}>\n          {title}\n        </Animated.Text>\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  message: {\n    color: colors.white,\n    fontSize: 36,\n    fontWeight: '500',\n    lineHeight: 42,\n    letterSpacing: -1,\n    textAlign: 'left',\n  },\n});\n"]}