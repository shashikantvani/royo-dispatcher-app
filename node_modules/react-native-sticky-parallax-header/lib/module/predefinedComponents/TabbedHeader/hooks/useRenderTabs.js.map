{"version":3,"sources":["useRenderTabs.tsx"],"names":["React","Tabs","useRenderTabs","tabsProps","activeTab","horizontalScrollValue","onTabPressed","tabTextActiveStyle","tabTextContainerActiveStyle","tabTextContainerStyle","tabTextStyle","tabUnderlineColor","tabWrapperStyle","tabs","tabsContainerBackgroundColor","tabsContainerHorizontalPadding","tabsContainerStyle","useCallback"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAKA,SAASC,IAAT,QAAqB,oBAArB;AAEA,OAAO,SAASC,aAAT,CACLC,SADK,EAKL;AACA,QAAM;AACJC,IAAAA,SADI;AAEJC,IAAAA,qBAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,kBAJI;AAKJC,IAAAA,2BALI;AAMJC,IAAAA,qBANI;AAOJC,IAAAA,YAPI;AAQJC,IAAAA,iBARI;AASJC,IAAAA,eATI;AAUJC,IAAAA,IAVI;AAWJC,IAAAA,4BAXI;AAYJC,IAAAA,8BAZI;AAaJC,IAAAA;AAbI,MAcFb,SAdJ;AAgBA,SAAOH,KAAK,CAACiB,WAAN,CAAkB,MAAM;AAC7B,QAAI,CAACJ,IAAL,EAAW;AACT,aAAO,IAAP;AACD;;AAED,wBACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAEA,IADR;AAEE,MAAA,SAAS,EAAET,SAFb;AAGE,MAAA,qBAAqB,EAAEC,qBAHzB;AAIE,MAAA,YAAY,EAAEC,YAJhB;AAKE,MAAA,kBAAkB,EAAEC,kBALtB;AAME,MAAA,2BAA2B,EAAEC,2BAN/B;AAOE,MAAA,qBAAqB,EAAEC,qBAPzB;AAQE,MAAA,YAAY,EAAEC,YARhB;AASE,MAAA,iBAAiB,EAAEC,iBATrB;AAUE,MAAA,eAAe,EAAEC,eAVnB;AAWE,MAAA,4BAA4B,EAAEE,4BAXhC;AAYE,MAAA,8BAA8B,EAAEC,8BAZlC;AAaE,MAAA,kBAAkB,EAAEC;AAbtB,MADF;AAiBD,GAtBM,EAsBJ,CACDZ,SADC,EAEDC,qBAFC,EAGDC,YAHC,EAIDC,kBAJC,EAKDC,2BALC,EAMDC,qBANC,EAODC,YAPC,EAQDC,iBARC,EASDC,eATC,EAUDC,IAVC,EAWDC,4BAXC,EAYDC,8BAZC,EAaDC,kBAbC,CAtBI,CAAP;AAqCD","sourcesContent":["import * as React from 'react';\nimport type Animated from 'react-native-reanimated';\n\nimport type { Tab } from '../../common/SharedProps';\nimport type { TabsProps } from '../components/Tabs';\nimport { Tabs } from '../components/Tabs';\n\nexport function useRenderTabs(\n  tabsProps: Omit<TabsProps, 'tabs'> & {\n    tabs?: Tab[];\n    horizontalScrollValue: Animated.SharedValue<number>;\n  }\n) {\n  const {\n    activeTab,\n    horizontalScrollValue,\n    onTabPressed,\n    tabTextActiveStyle,\n    tabTextContainerActiveStyle,\n    tabTextContainerStyle,\n    tabTextStyle,\n    tabUnderlineColor,\n    tabWrapperStyle,\n    tabs,\n    tabsContainerBackgroundColor,\n    tabsContainerHorizontalPadding,\n    tabsContainerStyle,\n  } = tabsProps;\n\n  return React.useCallback(() => {\n    if (!tabs) {\n      return null;\n    }\n\n    return (\n      <Tabs\n        tabs={tabs}\n        activeTab={activeTab}\n        horizontalScrollValue={horizontalScrollValue}\n        onTabPressed={onTabPressed}\n        tabTextActiveStyle={tabTextActiveStyle}\n        tabTextContainerActiveStyle={tabTextContainerActiveStyle}\n        tabTextContainerStyle={tabTextContainerStyle}\n        tabTextStyle={tabTextStyle}\n        tabUnderlineColor={tabUnderlineColor}\n        tabWrapperStyle={tabWrapperStyle}\n        tabsContainerBackgroundColor={tabsContainerBackgroundColor}\n        tabsContainerHorizontalPadding={tabsContainerHorizontalPadding}\n        tabsContainerStyle={tabsContainerStyle}\n      />\n    );\n  }, [\n    activeTab,\n    horizontalScrollValue,\n    onTabPressed,\n    tabTextActiveStyle,\n    tabTextContainerActiveStyle,\n    tabTextContainerStyle,\n    tabTextStyle,\n    tabUnderlineColor,\n    tabWrapperStyle,\n    tabs,\n    tabsContainerBackgroundColor,\n    tabsContainerHorizontalPadding,\n    tabsContainerStyle,\n  ]);\n}\n"]}