{"version":3,"sources":["useTabbedFlashListHeader.tsx"],"names":["React","Platform","runOnJS","useSharedValue","useWorkletCallback","HeaderWrapper","usePredefinedFlashListHeader","debounce","isNotEmpty","Foreground","useRenderTabs","useRenderFlashListHeader","props","contentBackgroundColor","innerScrollHeight","onMomentumScrollEnd","onScroll","onScrollEndDrag","parallaxHeight","scrollHeight","scrollValue","scrollViewRef","backgroundColor","backgroundImage","foregroundImage","hasBorderRadius","tabsContainerBackgroundColor","title","titleStyle","titleTestID","horizontalScrollValue","onHorizontalPagerScroll","e","value","contentOffset","x","renderHeader","useCallback","useTabbedFlashListHeader","stickyHeaderIndices","activeSection","setActiveSection","useState","ignoreViewabilityItemsChangedEvent","onViewableItemsChanged","viewableItems","length","index","newActiveSection","i","firstIdx","secondIdx","goToSection","sectionIndex","current","scrollToIndex","animated","viewPosition","viewOffset","onMomentumScrollEndInternal","debouncedIgnoreViewabilityItemsChangedCallback","onScrollInternal","OS","renderTabs","activeTab","onTabPressed"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { FlashList, ViewToken } from '@shopify/flash-list';\nimport * as React from 'react';\nimport type { NativeScrollEvent } from 'react-native';\nimport { Platform } from 'react-native';\nimport { runOnJS, useSharedValue, useWorkletCallback } from 'react-native-reanimated';\n\nimport { HeaderWrapper } from '../../common/components/HeaderWrapper';\nimport { usePredefinedFlashListHeader } from '../../common/hooks/usePredefinedFlashListHeader';\nimport { debounce } from '../../common/utils/debounce';\nimport { isNotEmpty } from '../../common/utils/isNotEmpty';\nimport type { TabbedHeaderFlashListProps } from '../TabbedHeaderProps';\nimport { Foreground } from '../components/HeaderForeground';\n\nimport { useRenderTabs } from './useRenderTabs';\n\nfunction useRenderFlashListHeader<T extends FlashList<any>>(\n  props: TabbedHeaderFlashListProps<any>\n) {\n  const {\n    contentBackgroundColor,\n    innerScrollHeight,\n    onMomentumScrollEnd,\n    onScroll,\n    onScrollEndDrag,\n    parallaxHeight,\n    scrollHeight,\n    scrollValue,\n    scrollViewRef,\n  } = usePredefinedFlashListHeader<T>(props);\n  const {\n    backgroundColor,\n    backgroundImage,\n    foregroundImage,\n    hasBorderRadius,\n    tabsContainerBackgroundColor,\n    title,\n    titleStyle,\n    titleTestID,\n  } = props;\n  const horizontalScrollValue = useSharedValue(0);\n  const onHorizontalPagerScroll = useWorkletCallback((e: NativeScrollEvent) => {\n    horizontalScrollValue.value = e.contentOffset.x;\n  }, []);\n\n  const renderHeader = React.useCallback(() => {\n    return (\n      <HeaderWrapper\n        backgroundColor={backgroundColor}\n        backgroundImage={backgroundImage}\n        contentBackgroundColor={contentBackgroundColor}\n        hasBorderRadius={hasBorderRadius}\n        parallaxHeight={parallaxHeight}\n        scrollHeight={scrollHeight}\n        scrollValue={scrollValue}\n        tabsContainerBackgroundColor={tabsContainerBackgroundColor}>\n        <Foreground\n          height={parallaxHeight}\n          scrollValue={scrollValue}\n          foregroundImage={foregroundImage}\n          title={title}\n          titleStyle={titleStyle}\n          titleTestID={titleTestID}\n        />\n      </HeaderWrapper>\n    );\n  }, [\n    backgroundColor,\n    backgroundImage,\n    contentBackgroundColor,\n    foregroundImage,\n    hasBorderRadius,\n    parallaxHeight,\n    scrollHeight,\n    scrollValue,\n    tabsContainerBackgroundColor,\n    title,\n    titleStyle,\n    titleTestID,\n  ]);\n\n  return {\n    innerScrollHeight,\n    horizontalScrollValue,\n    onHorizontalPagerScroll,\n    onMomentumScrollEnd,\n    onScroll,\n    onScrollEndDrag,\n    renderHeader,\n    scrollHeight,\n    scrollValue,\n    scrollViewRef,\n  };\n}\n\nexport function useTabbedFlashListHeader<ItemT, T extends FlashList<ItemT> = FlashList<ItemT>>(\n  props: TabbedHeaderFlashListProps<ItemT>\n) {\n  const {\n    innerScrollHeight,\n    horizontalScrollValue,\n    onMomentumScrollEnd,\n    onScroll,\n    onScrollEndDrag,\n    renderHeader,\n    scrollValue,\n    scrollViewRef,\n  } = useRenderFlashListHeader<T>(props);\n  const { stickyHeaderIndices = [], backgroundColor, tabsContainerBackgroundColor } = props;\n  const [activeSection, setActiveSection] = React.useState(0);\n  const ignoreViewabilityItemsChangedEvent = useSharedValue(false);\n  const onViewableItemsChanged = React.useCallback(\n    ({ viewableItems }: { viewableItems: ViewToken[]; changed: ViewToken[] }) => {\n      if (\n        !viewableItems.length ||\n        ignoreViewabilityItemsChangedEvent.value ||\n        !isNotEmpty(viewableItems[0].index)\n      ) {\n        return;\n      }\n\n      let newActiveSection: number | undefined;\n\n      for (let i = 0; i < stickyHeaderIndices.length; i++) {\n        const firstIdx = stickyHeaderIndices[i];\n\n        if (i === stickyHeaderIndices.length - 1) {\n          if (viewableItems[0].index >= firstIdx) {\n            newActiveSection = i;\n            i = stickyHeaderIndices.length;\n          }\n        } else {\n          const secondIdx = stickyHeaderIndices[i + 1];\n\n          if (viewableItems[0].index >= firstIdx && viewableItems[0].index < secondIdx) {\n            newActiveSection = i;\n            i = stickyHeaderIndices.length;\n          }\n        }\n      }\n\n      if (typeof newActiveSection === 'number') {\n        setActiveSection(newActiveSection);\n      }\n    },\n    [ignoreViewabilityItemsChangedEvent, stickyHeaderIndices]\n  );\n  const goToSection = React.useCallback(\n    (sectionIndex: number) => {\n      ignoreViewabilityItemsChangedEvent.value = true;\n      scrollViewRef.current?.scrollToIndex({\n        animated: true,\n        index: stickyHeaderIndices[sectionIndex],\n        viewPosition: 0,\n        viewOffset: 0,\n      });\n      setActiveSection(sectionIndex);\n    },\n    [ignoreViewabilityItemsChangedEvent, scrollViewRef, stickyHeaderIndices]\n  );\n  const onMomentumScrollEndInternal = useWorkletCallback(\n    (e: NativeScrollEvent) => {\n      ignoreViewabilityItemsChangedEvent.value = false;\n      onMomentumScrollEnd?.(e);\n    },\n    [onMomentumScrollEnd]\n  );\n  const debouncedIgnoreViewabilityItemsChangedCallback = debounce(() => {\n    ignoreViewabilityItemsChangedEvent.value = false;\n  }, 100);\n  const onScrollInternal = useWorkletCallback(\n    (e: NativeScrollEvent) => {\n      if (Platform.OS === 'web') {\n        // On web there is no onMomentumScrollEnd\n        runOnJS(debouncedIgnoreViewabilityItemsChangedCallback)();\n      }\n\n      onScroll?.(e);\n    },\n    [onScroll]\n  );\n\n  const renderTabs = useRenderTabs({\n    ...props,\n    activeTab: activeSection,\n    horizontalScrollValue,\n    onTabPressed: goToSection,\n    tabsContainerBackgroundColor: tabsContainerBackgroundColor ?? backgroundColor,\n  });\n\n  return {\n    goToSection,\n    innerScrollHeight,\n    onMomentumScrollEnd: onMomentumScrollEndInternal,\n    onScroll: onScrollInternal,\n    onScrollEndDrag,\n    onViewableItemsChanged,\n    renderHeader,\n    renderTabs,\n    scrollValue,\n    scrollViewRef,\n  };\n}\n"]}