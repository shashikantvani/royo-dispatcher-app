{"version":3,"sources":["useAvatarFlashListHeader.tsx"],"names":["React","HeaderWrapper","usePredefinedFlashListHeader","Foreground","useAvatarFlashListHeader","props","contentBackgroundColor","onMomentumScrollEnd","onScroll","onScrollEndDrag","parallaxHeight","scrollHeight","scrollValue","scrollViewRef","backgroundColor","backgroundImage","hasBorderRadius","image","subtitle","subtitleStyle","subtitleTestID","tabsContainerBackgroundColor","title","titleStyle","titleTestID","renderHeader","useCallback"],"mappings":"AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,aAAT,QAA8B,uCAA9B;AACA,SAASC,4BAAT,QAA6C,iDAA7C;AAEA,SAASC,UAAT,QAA2B,gCAA3B;AAEA,OAAO,SAASC,wBAAT,CACLC,KADK,EAEL;AACA,QAAM;AACJC,IAAAA,sBADI;AAEJC,IAAAA,mBAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,eAJI;AAKJC,IAAAA,cALI;AAMJC,IAAAA,YANI;AAOJC,IAAAA,WAPI;AAQJC,IAAAA;AARI,MASFX,4BAA4B,CAAIG,KAAJ,CAThC;AAUA,QAAM;AACJS,IAAAA,eADI;AAEJC,IAAAA,eAFI;AAGJC,IAAAA,eAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA,QALI;AAMJC,IAAAA,aANI;AAOJC,IAAAA,cAPI;AAQJC,IAAAA,4BARI;AASJC,IAAAA,KATI;AAUJC,IAAAA,UAVI;AAWJC,IAAAA;AAXI,MAYFnB,KAZJ;AAcA,QAAMoB,YAAY,GAAGzB,KAAK,CAAC0B,WAAN,CAAkB,MAAM;AAC3C,wBACE,oBAAC,aAAD;AACE,MAAA,eAAe,EAAEZ,eADnB;AAEE,MAAA,eAAe,EAAEC,eAFnB;AAGE,MAAA,sBAAsB,EAAET,sBAH1B;AAIE,MAAA,eAAe,EAAEU,eAJnB;AAKE,MAAA,cAAc,EAAEN,cALlB;AAME,MAAA,YAAY,EAAEC,YANhB;AAOE,MAAA,WAAW,EAAEC,WAPf;AAQE,MAAA,4BAA4B,EAAES;AARhC,oBASE,oBAAC,UAAD;AACE,MAAA,MAAM,EAAEX,cADV;AAEE,MAAA,WAAW,EAAEE,WAFf;AAGE,MAAA,KAAK,EAAEK,KAHT;AAIE,MAAA,QAAQ,EAAEC,QAJZ;AAKE,MAAA,aAAa,EAAEC,aALjB;AAME,MAAA,cAAc,EAAEC,cANlB;AAOE,MAAA,KAAK,EAAEE,KAPT;AAQE,MAAA,UAAU,EAAEC,UARd;AASE,MAAA,WAAW,EAAEC;AATf,MATF,CADF;AAuBD,GAxBoB,EAwBlB,CACDV,eADC,EAEDC,eAFC,EAGDT,sBAHC,EAIDU,eAJC,EAKDC,KALC,EAMDP,cANC,EAODC,YAPC,EAQDC,WARC,EASDM,QATC,EAUDC,aAVC,EAWDC,cAXC,EAYDC,4BAZC,EAaDC,KAbC,EAcDC,UAdC,EAeDC,WAfC,CAxBkB,CAArB;AA0CA,SAAO;AACLjB,IAAAA,mBADK;AAELC,IAAAA,QAFK;AAGLC,IAAAA,eAHK;AAILC,IAAAA,cAJK;AAKLe,IAAAA,YALK;AAMLb,IAAAA,WANK;AAOLC,IAAAA;AAPK,GAAP;AASD","sourcesContent":["import type { FlashList } from '@shopify/flash-list';\nimport * as React from 'react';\n\nimport { HeaderWrapper } from '../../common/components/HeaderWrapper';\nimport { usePredefinedFlashListHeader } from '../../common/hooks/usePredefinedFlashListHeader';\nimport type { AvatarHeaderFlashListProps } from '../AvatarHeaderProps';\nimport { Foreground } from '../components/HeaderForeground';\n\nexport function useAvatarFlashListHeader<ItemT, T extends FlashList<ItemT> = FlashList<ItemT>>(\n  props: AvatarHeaderFlashListProps<ItemT>\n) {\n  const {\n    contentBackgroundColor,\n    onMomentumScrollEnd,\n    onScroll,\n    onScrollEndDrag,\n    parallaxHeight,\n    scrollHeight,\n    scrollValue,\n    scrollViewRef,\n  } = usePredefinedFlashListHeader<T>(props);\n  const {\n    backgroundColor,\n    backgroundImage,\n    hasBorderRadius,\n    image,\n    subtitle,\n    subtitleStyle,\n    subtitleTestID,\n    tabsContainerBackgroundColor,\n    title,\n    titleStyle,\n    titleTestID,\n  } = props;\n\n  const renderHeader = React.useCallback(() => {\n    return (\n      <HeaderWrapper\n        backgroundColor={backgroundColor}\n        backgroundImage={backgroundImage}\n        contentBackgroundColor={contentBackgroundColor}\n        hasBorderRadius={hasBorderRadius}\n        parallaxHeight={parallaxHeight}\n        scrollHeight={scrollHeight}\n        scrollValue={scrollValue}\n        tabsContainerBackgroundColor={tabsContainerBackgroundColor}>\n        <Foreground\n          height={parallaxHeight}\n          scrollValue={scrollValue}\n          image={image}\n          subtitle={subtitle}\n          subtitleStyle={subtitleStyle}\n          subtitleTestID={subtitleTestID}\n          title={title}\n          titleStyle={titleStyle}\n          titleTestID={titleTestID}\n        />\n      </HeaderWrapper>\n    );\n  }, [\n    backgroundColor,\n    backgroundImage,\n    contentBackgroundColor,\n    hasBorderRadius,\n    image,\n    parallaxHeight,\n    scrollHeight,\n    scrollValue,\n    subtitle,\n    subtitleStyle,\n    subtitleTestID,\n    tabsContainerBackgroundColor,\n    title,\n    titleStyle,\n    titleTestID,\n  ]);\n\n  return {\n    onMomentumScrollEnd,\n    onScroll,\n    onScrollEndDrag,\n    parallaxHeight,\n    renderHeader,\n    scrollValue,\n    scrollViewRef,\n  };\n}\n"]}