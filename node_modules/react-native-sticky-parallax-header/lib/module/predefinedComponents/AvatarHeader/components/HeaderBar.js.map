{"version":3,"sources":["HeaderBar.tsx"],"names":["React","Pressable","StyleSheet","View","Animated","Extrapolate","interpolate","useAnimatedStyle","SafeAreaView","colors","commonStyles","IconRenderer","useRTLStyles","parseAnimatedColorProp","scrollPosition","HIT_SLOP","top","left","bottom","right","HeaderBar","backgroundColor","enableSafeAreaTopInset","height","image","leftTopIcon","leftTopIconAccessibilityLabel","leftTopIconOnPress","leftTopIconTestID","rightTopIcon","rightTopIconAccessibilityLabel","rightTopIconOnPress","rightTopIconTestID","scrollValue","title","titleStyle","titleTestID","beforeFadeImg","startFadeImg","finishFadeImg","beforeFadeName","startFadeName","finishFadeName","imageAnimatedStyle","opacity","value","CLAMP","nameAnimatedStyle","headerTitleContainerRTLStyle","styles","headerTitleContainerMarginRight","headerTitleContainerMarginLeft","headerTitleContainerMarginEnd","wrapperAnimatedStyle","safeAreaEdges","push","container","headerWrapper","leftHeaderButton","headerTitleContainer","headerPic","headerTitle","rightHeaderButton","create","width","borderRadius","fontSize","lineHeight","color","white","marginHorizontal","textAlign","flex","flexDirection","alignItems","marginEnd","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport type { ImageSourcePropType, StyleProp, TextStyle, ViewStyle } from 'react-native';\nimport { Pressable, StyleSheet, View } from 'react-native';\nimport Animated, { Extrapolate, interpolate, useAnimatedStyle } from 'react-native-reanimated';\nimport type { Edge } from 'react-native-safe-area-context';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nimport { colors, commonStyles } from '../../../constants';\nimport type { AnimatedColorProp, IconProps } from '../../common/SharedProps';\nimport IconRenderer from '../../common/components/IconRenderer';\nimport { useRTLStyles } from '../../common/hooks/useRTLStyles';\nimport { parseAnimatedColorProp } from '../../common/utils/parseAnimatedColorProp';\nimport { scrollPosition } from '../../common/utils/scrollPosition';\n\nconst HIT_SLOP = {\n  top: 15,\n  left: 15,\n  bottom: 15,\n  right: 15,\n};\n\ninterface HeaderProps extends IconProps {\n  backgroundColor?: AnimatedColorProp;\n  enableSafeAreaTopInset?: boolean;\n  height: number;\n  image?: ImageSourcePropType;\n  scrollValue: Animated.SharedValue<number>;\n  title?: string;\n  titleStyle?: StyleProp<Animated.AnimateStyle<TextStyle>>;\n  titleTestID?: string;\n}\n\nexport const HeaderBar: React.FC<HeaderProps> = ({\n  backgroundColor,\n  enableSafeAreaTopInset,\n  height,\n  image,\n  leftTopIcon,\n  leftTopIconAccessibilityLabel,\n  leftTopIconOnPress,\n  leftTopIconTestID,\n  rightTopIcon,\n  rightTopIconAccessibilityLabel,\n  rightTopIconOnPress,\n  rightTopIconTestID,\n  scrollValue,\n  title,\n  titleStyle,\n  titleTestID = 'AvatarHeaderBarTestID',\n}) => {\n  const [beforeFadeImg, startFadeImg, finishFadeImg] = [\n    scrollPosition(height, 30),\n    scrollPosition(height, 40),\n    scrollPosition(height, 70),\n  ];\n  const [beforeFadeName, startFadeName, finishFadeName] = [\n    scrollPosition(height, 50),\n    scrollPosition(height, 60),\n    scrollPosition(height, 75),\n  ];\n\n  const imageAnimatedStyle = useAnimatedStyle(() => {\n    return {\n      opacity: interpolate(\n        scrollValue.value,\n        [0, beforeFadeImg, startFadeImg, finishFadeImg],\n        [0, 0, 0.5, 1],\n        Extrapolate.CLAMP\n      ),\n    };\n  }, [scrollValue, beforeFadeImg, startFadeImg, finishFadeImg]);\n  const nameAnimatedStyle = useAnimatedStyle(() => {\n    return {\n      opacity: interpolate(\n        scrollValue.value,\n        [0, beforeFadeName, startFadeName, finishFadeName],\n        [0, 0, 0.5, 1],\n        Extrapolate.CLAMP\n      ),\n    };\n  }, [scrollValue, beforeFadeName, startFadeName, finishFadeName]);\n  const headerTitleContainerRTLStyle = useRTLStyles<ViewStyle>(\n    styles.headerTitleContainerMarginRight,\n    styles.headerTitleContainerMarginLeft,\n    styles.headerTitleContainerMarginEnd\n  );\n  const wrapperAnimatedStyle = useAnimatedStyle(() => {\n    return {\n      // TypeScript complains about AnimatedNode<StyleProp<ViewStyle>> from reanimated v1\n      backgroundColor: parseAnimatedColorProp(backgroundColor) as string,\n    };\n  }, [backgroundColor]);\n\n  const safeAreaEdges: Edge[] = ['left', 'right'];\n\n  if (enableSafeAreaTopInset) {\n    safeAreaEdges.push('top');\n  }\n\n  return (\n    <SafeAreaView edges={safeAreaEdges} style={commonStyles.container}>\n      <Animated.View style={[commonStyles.headerWrapper, wrapperAnimatedStyle]}>\n        {leftTopIcon ? (\n          <Pressable\n            accessibilityLabel={leftTopIconAccessibilityLabel}\n            accessibilityRole=\"button\"\n            hitSlop={HIT_SLOP}\n            onPress={leftTopIconOnPress}\n            style={styles.leftHeaderButton}\n            testID={leftTopIconTestID}>\n            <IconRenderer icon={leftTopIcon} />\n          </Pressable>\n        ) : null}\n\n        <View style={[styles.headerTitleContainer, headerTitleContainerRTLStyle]}>\n          <Animated.Image\n            source={image as ImageSourcePropType}\n            style={[styles.headerPic, imageAnimatedStyle]}\n          />\n          <Animated.Text\n            numberOfLines={1}\n            style={[styles.headerTitle, nameAnimatedStyle, titleStyle]}\n            testID={titleTestID}>\n            {title}\n          </Animated.Text>\n        </View>\n        {rightTopIcon ? (\n          <Pressable\n            accessibilityLabel={rightTopIconAccessibilityLabel}\n            accessibilityRole=\"button\"\n            hitSlop={HIT_SLOP}\n            onPress={rightTopIconOnPress}\n            style={styles.rightHeaderButton}\n            testID={rightTopIconTestID}>\n            <IconRenderer icon={rightTopIcon} />\n          </Pressable>\n        ) : null}\n      </Animated.View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  headerPic: {\n    width: 32,\n    height: 32,\n    borderRadius: 8,\n  },\n  headerTitle: {\n    fontSize: 16,\n    lineHeight: 20,\n    color: colors.white,\n    marginHorizontal: 12,\n    textAlign: 'left',\n  },\n  headerTitleContainer: {\n    flex: 8,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  headerTitleContainerMarginEnd: {\n    marginEnd: 24,\n  },\n  headerTitleContainerMarginLeft: {\n    marginLeft: 24,\n  },\n  headerTitleContainerMarginRight: {\n    marginRight: 24,\n  },\n  leftHeaderButton: {\n    alignItems: 'flex-start',\n    flex: 1,\n  },\n  rightHeaderButton: {\n    flex: 1,\n    alignItems: 'flex-end',\n  },\n});\n"]}