{"version":3,"sources":["useDetailsFlashListHeader.tsx"],"names":["React","Extrapolate","interpolate","useAnimatedStyle","HeaderWrapper","usePredefinedFlashListHeader","scrollPosition","Foreground","useDetailsFlashListHeader","props","contentBackgroundColor","onMomentumScrollEnd","onScroll","onScrollEndDrag","parallaxHeight","scrollHeight","scrollValue","scrollViewRef","backgroundColor","backgroundImage","contentIcon","contentIconNumber","contentIconNumberStyle","contentIconNumberTestID","hasBorderRadius","image","subtitle","subtitleStyle","subtitleTestID","tabsContainerBackgroundColor","tag","tagStyle","tagTestID","title","titleStyle","titleTestID","headerTitleInputRange","headerTitleContainerAnimatedStyle","opacity","value","CLAMP","renderHeader","useCallback"],"mappings":"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","sourcesContent":["import type { FlashList } from '@shopify/flash-list';\nimport * as React from 'react';\nimport { Extrapolate, interpolate, useAnimatedStyle } from 'react-native-reanimated';\n\nimport { HeaderWrapper } from '../../common/components/HeaderWrapper';\nimport { usePredefinedFlashListHeader } from '../../common/hooks/usePredefinedFlashListHeader';\nimport { scrollPosition } from '../../common/utils/scrollPosition';\nimport type { DetailsHeaderFlashListProps } from '../DetailsHeaderProps';\nimport { Foreground } from '../components/HeaderForeground';\n\nexport function useDetailsFlashListHeader<ItemT, T extends FlashList<ItemT> = FlashList<ItemT>>(\n  props: DetailsHeaderFlashListProps<ItemT>\n) {\n  const {\n    contentBackgroundColor,\n    onMomentumScrollEnd,\n    onScroll,\n    onScrollEndDrag,\n    parallaxHeight,\n    scrollHeight,\n    scrollValue,\n    scrollViewRef,\n  } = usePredefinedFlashListHeader<T>(props);\n  const {\n    backgroundColor,\n    backgroundImage,\n    contentIcon,\n    contentIconNumber,\n    contentIconNumberStyle,\n    contentIconNumberTestID,\n    hasBorderRadius,\n    image,\n    subtitle,\n    subtitleStyle,\n    subtitleTestID,\n    tabsContainerBackgroundColor,\n    tag,\n    tagStyle,\n    tagTestID,\n    title,\n    titleStyle,\n    titleTestID,\n  } = props;\n\n  const headerTitleInputRange = [\n    0,\n    scrollPosition(scrollHeight, 60),\n    scrollPosition(scrollHeight, 90),\n  ];\n  const headerTitleContainerAnimatedStyle = useAnimatedStyle(() => {\n    return {\n      opacity: interpolate(scrollValue.value, headerTitleInputRange, [0, 0, 1], Extrapolate.CLAMP),\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [scrollValue, scrollHeight]);\n\n  const renderHeader = React.useCallback(() => {\n    return (\n      <HeaderWrapper\n        backgroundColor={backgroundColor}\n        backgroundImage={backgroundImage}\n        contentBackgroundColor={contentBackgroundColor}\n        hasBorderRadius={hasBorderRadius}\n        parallaxHeight={parallaxHeight}\n        scrollHeight={scrollHeight}\n        scrollValue={scrollValue}\n        tabsContainerBackgroundColor={tabsContainerBackgroundColor}>\n        <Foreground\n          height={parallaxHeight}\n          scrollValue={scrollValue}\n          contentIcon={contentIcon}\n          contentIconNumber={contentIconNumber}\n          contentIconNumberStyle={contentIconNumberStyle}\n          contentIconNumberTestID={contentIconNumberTestID}\n          image={image}\n          subtitle={subtitle}\n          subtitleStyle={subtitleStyle}\n          subtitleTestID={subtitleTestID}\n          tag={tag}\n          tagStyle={tagStyle}\n          tagTestID={tagTestID}\n          title={title}\n          titleStyle={titleStyle}\n          titleTestID={titleTestID}\n        />\n      </HeaderWrapper>\n    );\n  }, [\n    backgroundColor,\n    backgroundImage,\n    contentBackgroundColor,\n    contentIcon,\n    contentIconNumber,\n    contentIconNumberStyle,\n    contentIconNumberTestID,\n    hasBorderRadius,\n    image,\n    parallaxHeight,\n    scrollHeight,\n    scrollValue,\n    subtitle,\n    subtitleStyle,\n    subtitleTestID,\n    tabsContainerBackgroundColor,\n    tag,\n    tagStyle,\n    tagTestID,\n    title,\n    titleStyle,\n    titleTestID,\n  ]);\n\n  return {\n    headerTitleContainerAnimatedStyle,\n    onMomentumScrollEnd,\n    onScroll,\n    onScrollEndDrag,\n    renderHeader,\n    scrollValue,\n    scrollViewRef,\n  };\n}\n"]}