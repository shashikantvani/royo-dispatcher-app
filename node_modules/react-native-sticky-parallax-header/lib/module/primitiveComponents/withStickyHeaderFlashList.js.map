{"version":3,"sources":["withStickyHeaderFlashList.tsx"],"names":["React","StyleSheet","View","Animated","useStickyHeaderProps","NOOP","withStickyHeaderFlashList","flashListComponent","AnimatedFlashList","createAnimatedComponent","forwardRef","props","ref","containerStyle","contentContainerStyle","overScrollMode","onScroll","onScrollEndDrag","onMomentumScrollEnd","onTabsLayout","renderHeader","renderTabs","scrollEventThrottle","rest","contentContainerPaddingTop","contentContainerPaddingBottom","headerAnimatedStyle","headerHeight","onHeaderLayoutInternal","onTabsLayoutInternal","scrollHandler","tabsHeight","sections","flattenContentContainerStyle","useMemo","flatten","paddingBottom","paddingTop","styles","container","header","create","alignSelf","flex","overflow","position","left","right","zIndex"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { FlashListProps } from '@shopify/flash-list';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Animated from 'react-native-reanimated';\n\nimport type { StickyHeaderFlashListProps } from './StickyHeaderProps';\nimport { useStickyHeaderProps } from './useStickyHeaderProps';\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst NOOP = () => {};\n\nexport function withStickyHeaderFlashList<T extends React.ComponentClass<FlashListProps<any>>>(\n  flashListComponent: T\n) {\n  const AnimatedFlashList = Animated.createAnimatedComponent(flashListComponent) as any;\n\n  return React.forwardRef<\n    T,\n    StickyHeaderFlashListProps<unknown> & Animated.AnimateProps<React.PropsWithRef<T>>\n  >((props, ref) => {\n    const {\n      containerStyle,\n      contentContainerStyle,\n      overScrollMode = 'never',\n      onScroll,\n      onScrollEndDrag,\n      onMomentumScrollEnd,\n      onTabsLayout,\n      renderHeader,\n      renderTabs,\n      scrollEventThrottle = 16,\n      ...rest\n    } = props;\n    const {\n      contentContainerPaddingTop,\n      contentContainerPaddingBottom,\n      headerAnimatedStyle,\n      headerHeight,\n      onHeaderLayoutInternal,\n      onTabsLayoutInternal,\n      scrollHandler,\n      tabsHeight,\n    } = useStickyHeaderProps({\n      contentContainerStyle,\n      sections: [], // is not needed with FlashList\n      onMomentumScrollEnd,\n      onScroll,\n      onScrollEndDrag,\n      onTabsLayout,\n    });\n    const flattenContentContainerStyle = React.useMemo(() => {\n      return StyleSheet.flatten([\n        contentContainerStyle,\n        {\n          paddingBottom: tabsHeight + contentContainerPaddingBottom,\n          paddingTop: headerHeight + contentContainerPaddingTop,\n        },\n      ]);\n    }, [\n      contentContainerPaddingTop,\n      contentContainerPaddingBottom,\n      contentContainerStyle,\n      headerHeight,\n      tabsHeight,\n    ]);\n\n    return (\n      <View style={[styles.container, containerStyle]}>\n        <Animated.View pointerEvents=\"box-none\" style={[styles.header, headerAnimatedStyle]}>\n          {renderHeader ? (\n            <View pointerEvents=\"box-none\" onLayout={onHeaderLayoutInternal}>\n              {renderHeader()}\n            </View>\n          ) : null}\n          {renderTabs ? (\n            <View pointerEvents=\"box-none\" onLayout={onTabsLayoutInternal}>\n              {renderTabs()}\n            </View>\n          ) : null}\n        </Animated.View>\n        <View style={[styles.container, { paddingTop: tabsHeight }]}>\n          <AnimatedFlashList\n            ref={ref}\n            {...rest}\n            contentContainerStyle={flattenContentContainerStyle}\n            onScroll={scrollHandler}\n            onScrollBeginDrag={NOOP}\n            onScrollEndDrag={NOOP}\n            onMomentumScrollBegin={NOOP}\n            onMomentumScrollEnd={NOOP}\n            overScrollMode={overScrollMode}\n            progressViewOffset={headerHeight}\n            scrollEventThrottle={scrollEventThrottle}\n          />\n        </View>\n      </View>\n    );\n  }) as unknown as React.FC<\n    StickyHeaderFlashListProps<unknown> & Animated.AnimateProps<React.ComponentPropsWithRef<T>>\n  >;\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: 'stretch',\n    flex: 1,\n    overflow: 'hidden',\n  },\n  header: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    zIndex: 999,\n  },\n});\n"]}