{"version":3,"sources":["useStickyHeaderFlashListScrollProps.ts"],"names":["useCallback","useEffect","useRef","Platform","runOnJS","useAnimatedReaction","useAnimatedRef","useSharedValue","useWorkletCallback","useResponsiveSize","VELOCITY_THRESHOLD","useStickyHeaderFlashListScrollProps","props","responsiveHeight","headerHeight","onMomentumScrollEnd","onScroll","onScrollEndDrag","onTopReached","parallaxHeight","snapStartThreshold","snapStopThreshold","snapToEdge","scrollValue","scrollViewRef","onTopReachedRef","onTopReachedWasCalled","current","maybeTopReached","value","scrollHeight","Math","max","snapToTop","scrollToOffset","animated","offset","snapToBottom","onSnapToEdge","e","scrollToHeight","snapToEdgeThreshold","currentVal","velocity","y","dragsToTop","dragsToBottom","dragsQuickToBottom","dragsQuickToTop","isUnderSnapToEdgeThresholdAndDragIsSlow","isUnderSnapToEdgeThresholdAndDragIsQuick","isOverSnapToEdgeThresholdAndDragIsSlow","isOverSnapToEdgeThresholdAndDragIsQuick","onMomentumScrollEndInternal","onScrollEndDragInternal","OS","abs","onScrollInternal","contentOffset"],"mappings":"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","sourcesContent":["import type { FlashList } from '@shopify/flash-list';\nimport { useCallback, useEffect, useRef } from 'react';\nimport type { NativeScrollEvent } from 'react-native';\nimport { Platform } from 'react-native';\nimport {\n  runOnJS,\n  useAnimatedReaction,\n  useAnimatedRef,\n  useSharedValue,\n  useWorkletCallback,\n} from 'react-native-reanimated';\n\nimport { useResponsiveSize } from '../hooks/useResponsiveSize';\n\nimport type { StickyHeaderSharedProps, StickyHeaderSnapProps } from './StickyHeaderProps';\n\nconst VELOCITY_THRESHOLD = 7;\n\n// FIXME: unknown does not work here :/\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useStickyHeaderFlashListScrollProps<T extends FlashList<any> = FlashList<any>>(\n  props: StickyHeaderSharedProps & StickyHeaderSnapProps\n) {\n  const { responsiveHeight } = useResponsiveSize();\n\n  const {\n    headerHeight = 100,\n    onMomentumScrollEnd,\n    onScroll,\n    onScrollEndDrag,\n    onTopReached,\n    parallaxHeight = responsiveHeight(53),\n    snapStartThreshold,\n    snapStopThreshold,\n    snapToEdge = true,\n  } = props;\n\n  const scrollValue = useSharedValue(0);\n\n  const scrollViewRef = useAnimatedRef<T>();\n\n  const onTopReachedRef = useRef(onTopReached);\n  const onTopReachedWasCalled = useRef(false);\n\n  useEffect(() => {\n    onTopReachedRef.current = onTopReached;\n  }, [onTopReached]);\n\n  function maybeTopReached(value: number) {\n    if (value <= 0) {\n      if (!onTopReachedWasCalled.current && onTopReachedRef.current) {\n        onTopReachedRef.current();\n        onTopReachedWasCalled.current = true;\n      }\n    } else {\n      onTopReachedWasCalled.current = false;\n    }\n  }\n\n  useAnimatedReaction(\n    () => scrollValue.value,\n    (value) => {\n      runOnJS(maybeTopReached)(value);\n    },\n    [scrollValue]\n  );\n\n  const scrollHeight = Math.max(parallaxHeight, headerHeight * 2);\n\n  const snapToTop = useCallback(() => {\n    scrollViewRef.current?.scrollToOffset({ animated: true, offset: 0 });\n  }, [scrollViewRef]);\n\n  const snapToBottom = useCallback(() => {\n    scrollViewRef.current?.scrollToOffset({ animated: true, offset: scrollHeight });\n  }, [scrollHeight, scrollViewRef]);\n\n  const onSnapToEdge = useWorkletCallback(\n    (e: NativeScrollEvent) => {\n      const scrollToHeight = snapStopThreshold ?? scrollHeight;\n      const snapToEdgeThreshold = snapStartThreshold ?? scrollHeight / 2;\n\n      const currentVal = scrollValue.value;\n      const velocity = e.velocity?.y ?? 0;\n\n      const dragsToTop = velocity >= 0;\n      const dragsToBottom = !dragsToTop;\n      const dragsQuickToBottom = dragsToBottom && velocity <= -VELOCITY_THRESHOLD;\n      const dragsQuickToTop = dragsToTop && velocity >= VELOCITY_THRESHOLD;\n\n      const isUnderSnapToEdgeThresholdAndDragIsSlow =\n        currentVal > 0 && currentVal < snapToEdgeThreshold && !dragsQuickToBottom;\n      const isUnderSnapToEdgeThresholdAndDragIsQuick =\n        currentVal >= snapToEdgeThreshold / 2 &&\n        currentVal < snapToEdgeThreshold &&\n        dragsQuickToBottom;\n      const isOverSnapToEdgeThresholdAndDragIsSlow =\n        currentVal >= snapToEdgeThreshold && currentVal < scrollToHeight && !dragsQuickToTop;\n      const isOverSnapToEdgeThresholdAndDragIsQuick =\n        currentVal >= snapToEdgeThreshold && currentVal < scrollToHeight / 2 && dragsQuickToTop;\n\n      if (snapToEdge) {\n        // TODO: when react-native-web will support onMomentumScrollEnd & onScrollEndDrag events\n        // handle web snap scroll\n        if (isUnderSnapToEdgeThresholdAndDragIsSlow || isOverSnapToEdgeThresholdAndDragIsQuick) {\n          runOnJS(snapToTop)();\n        } else if (\n          isOverSnapToEdgeThresholdAndDragIsSlow ||\n          isUnderSnapToEdgeThresholdAndDragIsQuick\n        ) {\n          runOnJS(snapToBottom)();\n        }\n      }\n    },\n    [\n      snapStartThreshold,\n      snapStopThreshold,\n      snapToBottom,\n      snapToTop,\n      snapToEdge,\n      scrollHeight,\n      scrollValue,\n    ]\n  );\n\n  const onMomentumScrollEndInternal = useWorkletCallback(\n    (e: NativeScrollEvent) => {\n      onMomentumScrollEnd?.(e);\n      onSnapToEdge(e);\n    },\n    [onMomentumScrollEnd, onSnapToEdge]\n  );\n\n  const onScrollEndDragInternal = useWorkletCallback(\n    (e: NativeScrollEvent) => {\n      onScrollEndDrag?.(e);\n      if (Platform.OS === 'android' || Math.abs(e.velocity?.y ?? 0) > 0) {\n        return;\n      }\n\n      onSnapToEdge(e);\n    },\n    [onScrollEndDrag, onSnapToEdge]\n  );\n\n  const onScrollInternal = useWorkletCallback(\n    (e: NativeScrollEvent) => {\n      scrollValue.value = e.contentOffset.y;\n      onScroll?.(e);\n    },\n    [onScroll]\n  );\n\n  return {\n    onMomentumScrollEnd: onMomentumScrollEndInternal,\n    onScroll: onScrollInternal,\n    onScrollEndDrag: onScrollEndDragInternal,\n    scrollHeight,\n    scrollValue,\n    scrollViewRef,\n  };\n}\n"]}