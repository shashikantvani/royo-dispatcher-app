{"version":3,"sources":["HeaderBar.tsx"],"names":["HIT_SLOP","top","left","bottom","right","HeaderBar","backgroundColor","enableSafeAreaTopInset","headerTitleContainerAnimatedStyle","leftTopIcon","leftTopIconAccessibilityLabel","leftTopIconOnPress","leftTopIconTestID","rightTopIcon","rightTopIconAccessibilityLabel","rightTopIconOnPress","rightTopIconTestID","title","titleStyle","titleTestID","wrapperAnimatedStyle","safeAreaEdges","push","commonStyles","container","headerWrapper","styles","leftHeaderButton","headerTitleContainer","headerTitle","rightHeaderButton","StyleSheet","create","color","colors","white","fontSize","lineHeight","paddingHorizontal","textAlign","alignItems","flex"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport type { StyleProp, TextStyle } from 'react-native';\nimport { Pressable, StyleSheet } from 'react-native';\nimport Animated, { useAnimatedStyle } from 'react-native-reanimated';\nimport type { Edge } from 'react-native-safe-area-context';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nimport { colors, commonStyles } from '../../../constants';\nimport type { AnimatedColorProp, IconProps } from '../../common/SharedProps';\nimport IconRenderer from '../../common/components/IconRenderer';\nimport { parseAnimatedColorProp } from '../../common/utils/parseAnimatedColorProp';\n\ninterface HeaderBarProps extends IconProps {\n  backgroundColor?: AnimatedColorProp;\n  enableSafeAreaTopInset?: boolean;\n  headerTitleContainerAnimatedStyle: { opacity: number };\n  title?: string;\n  titleStyle?: StyleProp<Animated.AnimateStyle<TextStyle>>;\n  titleTestID?: string;\n}\n\nconst HIT_SLOP = {\n  top: 15,\n  left: 15,\n  bottom: 15,\n  right: 15,\n};\n\nexport const HeaderBar: React.FC<HeaderBarProps> = ({\n  backgroundColor,\n  enableSafeAreaTopInset,\n  headerTitleContainerAnimatedStyle,\n  leftTopIcon,\n  leftTopIconAccessibilityLabel,\n  leftTopIconOnPress,\n  leftTopIconTestID,\n  rightTopIcon,\n  rightTopIconAccessibilityLabel,\n  rightTopIconOnPress,\n  rightTopIconTestID,\n  title,\n  titleStyle,\n  titleTestID = 'DetailsHeaderBarTitleTestID',\n}) => {\n  const wrapperAnimatedStyle = useAnimatedStyle(() => {\n    return {\n      // TypeScript complains about AnimatedNode<StyleProp<ViewStyle>> from reanimated v1\n      backgroundColor: parseAnimatedColorProp(backgroundColor) as string,\n    };\n  }, [backgroundColor]);\n  const safeAreaEdges: Edge[] = ['left', 'right'];\n\n  if (enableSafeAreaTopInset) {\n    safeAreaEdges.push('top');\n  }\n\n  return (\n    <SafeAreaView edges={safeAreaEdges} style={commonStyles.container}>\n      <Animated.View style={[commonStyles.headerWrapper, wrapperAnimatedStyle]}>\n        {leftTopIcon ? (\n          <Pressable\n            accessibilityLabel={leftTopIconAccessibilityLabel}\n            accessibilityRole=\"button\"\n            hitSlop={HIT_SLOP}\n            onPress={leftTopIconOnPress}\n            style={styles.leftHeaderButton}\n            testID={leftTopIconTestID}>\n            <IconRenderer icon={leftTopIcon} />\n          </Pressable>\n        ) : null}\n        <Animated.View style={[styles.headerTitleContainer, headerTitleContainerAnimatedStyle]}>\n          <Animated.Text style={[styles.headerTitle, titleStyle]} testID={titleTestID}>\n            {title}\n          </Animated.Text>\n        </Animated.View>\n        {rightTopIcon ? (\n          <Pressable\n            accessibilityLabel={rightTopIconAccessibilityLabel}\n            accessibilityRole=\"button\"\n            hitSlop={HIT_SLOP}\n            onPress={rightTopIconOnPress}\n            style={styles.rightHeaderButton}\n            testID={rightTopIconTestID}>\n            <IconRenderer icon={rightTopIcon} />\n          </Pressable>\n        ) : null}\n      </Animated.View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  headerTitle: {\n    color: colors.white,\n    fontSize: 16,\n    lineHeight: 20,\n    paddingHorizontal: 12,\n    textAlign: 'left',\n  },\n  headerTitleContainer: {\n    alignItems: 'flex-start',\n    flex: 8,\n  },\n  leftHeaderButton: {\n    alignItems: 'flex-start',\n    flex: 1,\n  },\n  rightHeaderButton: {\n    flex: 1,\n    alignItems: 'flex-end',\n  },\n});\n"]}