{"version":3,"sources":["useDetailsFlashListHeader.tsx"],"names":["useDetailsFlashListHeader","props","contentBackgroundColor","onMomentumScrollEnd","onScroll","onScrollEndDrag","parallaxHeight","scrollHeight","scrollValue","scrollViewRef","backgroundColor","backgroundImage","contentIcon","contentIconNumber","contentIconNumberStyle","contentIconNumberTestID","hasBorderRadius","image","subtitle","subtitleStyle","subtitleTestID","tabsContainerBackgroundColor","tag","tagStyle","tagTestID","title","titleStyle","titleTestID","headerTitleInputRange","headerTitleContainerAnimatedStyle","opacity","value","Extrapolate","CLAMP","renderHeader","React","useCallback"],"mappings":"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","sourcesContent":["import type { FlashList } from '@shopify/flash-list';\nimport * as React from 'react';\nimport { Extrapolate, interpolate, useAnimatedStyle } from 'react-native-reanimated';\n\nimport { HeaderWrapper } from '../../common/components/HeaderWrapper';\nimport { usePredefinedFlashListHeader } from '../../common/hooks/usePredefinedFlashListHeader';\nimport { scrollPosition } from '../../common/utils/scrollPosition';\nimport type { DetailsHeaderFlashListProps } from '../DetailsHeaderProps';\nimport { Foreground } from '../components/HeaderForeground';\n\nexport function useDetailsFlashListHeader<ItemT, T extends FlashList<ItemT> = FlashList<ItemT>>(\n  props: DetailsHeaderFlashListProps<ItemT>\n) {\n  const {\n    contentBackgroundColor,\n    onMomentumScrollEnd,\n    onScroll,\n    onScrollEndDrag,\n    parallaxHeight,\n    scrollHeight,\n    scrollValue,\n    scrollViewRef,\n  } = usePredefinedFlashListHeader<T>(props);\n  const {\n    backgroundColor,\n    backgroundImage,\n    contentIcon,\n    contentIconNumber,\n    contentIconNumberStyle,\n    contentIconNumberTestID,\n    hasBorderRadius,\n    image,\n    subtitle,\n    subtitleStyle,\n    subtitleTestID,\n    tabsContainerBackgroundColor,\n    tag,\n    tagStyle,\n    tagTestID,\n    title,\n    titleStyle,\n    titleTestID,\n  } = props;\n\n  const headerTitleInputRange = [\n    0,\n    scrollPosition(scrollHeight, 60),\n    scrollPosition(scrollHeight, 90),\n  ];\n  const headerTitleContainerAnimatedStyle = useAnimatedStyle(() => {\n    return {\n      opacity: interpolate(scrollValue.value, headerTitleInputRange, [0, 0, 1], Extrapolate.CLAMP),\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [scrollValue, scrollHeight]);\n\n  const renderHeader = React.useCallback(() => {\n    return (\n      <HeaderWrapper\n        backgroundColor={backgroundColor}\n        backgroundImage={backgroundImage}\n        contentBackgroundColor={contentBackgroundColor}\n        hasBorderRadius={hasBorderRadius}\n        parallaxHeight={parallaxHeight}\n        scrollHeight={scrollHeight}\n        scrollValue={scrollValue}\n        tabsContainerBackgroundColor={tabsContainerBackgroundColor}>\n        <Foreground\n          height={parallaxHeight}\n          scrollValue={scrollValue}\n          contentIcon={contentIcon}\n          contentIconNumber={contentIconNumber}\n          contentIconNumberStyle={contentIconNumberStyle}\n          contentIconNumberTestID={contentIconNumberTestID}\n          image={image}\n          subtitle={subtitle}\n          subtitleStyle={subtitleStyle}\n          subtitleTestID={subtitleTestID}\n          tag={tag}\n          tagStyle={tagStyle}\n          tagTestID={tagTestID}\n          title={title}\n          titleStyle={titleStyle}\n          titleTestID={titleTestID}\n        />\n      </HeaderWrapper>\n    );\n  }, [\n    backgroundColor,\n    backgroundImage,\n    contentBackgroundColor,\n    contentIcon,\n    contentIconNumber,\n    contentIconNumberStyle,\n    contentIconNumberTestID,\n    hasBorderRadius,\n    image,\n    parallaxHeight,\n    scrollHeight,\n    scrollValue,\n    subtitle,\n    subtitleStyle,\n    subtitleTestID,\n    tabsContainerBackgroundColor,\n    tag,\n    tagStyle,\n    tagTestID,\n    title,\n    titleStyle,\n    titleTestID,\n  ]);\n\n  return {\n    headerTitleContainerAnimatedStyle,\n    onMomentumScrollEnd,\n    onScroll,\n    onScrollEndDrag,\n    renderHeader,\n    scrollValue,\n    scrollViewRef,\n  };\n}\n"]}