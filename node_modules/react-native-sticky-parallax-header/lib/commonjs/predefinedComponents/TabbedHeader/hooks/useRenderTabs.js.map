{"version":3,"sources":["useRenderTabs.tsx"],"names":["useRenderTabs","tabsProps","activeTab","horizontalScrollValue","onTabPressed","tabTextActiveStyle","tabTextContainerActiveStyle","tabTextContainerStyle","tabTextStyle","tabUnderlineColor","tabWrapperStyle","tabs","tabsContainerBackgroundColor","tabsContainerHorizontalPadding","tabsContainerStyle","React","useCallback"],"mappings":"6FAAA,oDAKA,wC,8lCAEO,QAASA,CAAAA,aAAT,CACLC,SADK,CAKL,gBACA,GACEC,CAAAA,SADF,CAcID,SAdJ,CACEC,SADF,CAEEC,qBAFF,CAcIF,SAdJ,CAEEE,qBAFF,CAGEC,YAHF,CAcIH,SAdJ,CAGEG,YAHF,CAIEC,kBAJF,CAcIJ,SAdJ,CAIEI,kBAJF,CAKEC,2BALF,CAcIL,SAdJ,CAKEK,2BALF,CAMEC,qBANF,CAcIN,SAdJ,CAMEM,qBANF,CAOEC,YAPF,CAcIP,SAdJ,CAOEO,YAPF,CAQEC,iBARF,CAcIR,SAdJ,CAQEQ,iBARF,CASEC,eATF,CAcIT,SAdJ,CASES,eATF,CAUEC,IAVF,CAcIV,SAdJ,CAUEU,IAVF,CAWEC,4BAXF,CAcIX,SAdJ,CAWEW,4BAXF,CAYEC,8BAZF,CAcIZ,SAdJ,CAYEY,8BAZF,CAaEC,kBAbF,CAcIb,SAdJ,CAaEa,kBAbF,CAgBA,MAAOC,CAAAA,KAAK,CAACC,WAAN,CAAkB,UAAM,CAC7B,GAAI,CAACL,IAAL,CAAW,CACT,MAAO,KAAP,CACD,CAED,MACE,qBAAC,UAAD,EACE,IAAI,CAAEA,IADR,CAEE,SAAS,CAAET,SAFb,CAGE,qBAAqB,CAAEC,qBAHzB,CAIE,YAAY,CAAEC,YAJhB,CAKE,kBAAkB,CAAEC,kBALtB,CAME,2BAA2B,CAAEC,2BAN/B,CAOE,qBAAqB,CAAEC,qBAPzB,CAQE,YAAY,CAAEC,YARhB,CASE,iBAAiB,CAAEC,iBATrB,CAUE,eAAe,CAAEC,eAVnB,CAWE,4BAA4B,CAAEE,4BAXhC,CAYE,8BAA8B,CAAEC,8BAZlC,CAaE,kBAAkB,CAAEC,kBAbtB,6EADF,CAiBD,CAtBM,CAsBJ,CACDZ,SADC,CAEDC,qBAFC,CAGDC,YAHC,CAIDC,kBAJC,CAKDC,2BALC,CAMDC,qBANC,CAODC,YAPC,CAQDC,iBARC,CASDC,eATC,CAUDC,IAVC,CAWDC,4BAXC,CAYDC,8BAZC,CAaDC,kBAbC,CAtBI,CAAP,CAqCD","sourcesContent":["import * as React from 'react';\nimport type Animated from 'react-native-reanimated';\n\nimport type { Tab } from '../../common/SharedProps';\nimport type { TabsProps } from '../components/Tabs';\nimport { Tabs } from '../components/Tabs';\n\nexport function useRenderTabs(\n  tabsProps: Omit<TabsProps, 'tabs'> & {\n    tabs?: Tab[];\n    horizontalScrollValue: Animated.SharedValue<number>;\n  }\n) {\n  const {\n    activeTab,\n    horizontalScrollValue,\n    onTabPressed,\n    tabTextActiveStyle,\n    tabTextContainerActiveStyle,\n    tabTextContainerStyle,\n    tabTextStyle,\n    tabUnderlineColor,\n    tabWrapperStyle,\n    tabs,\n    tabsContainerBackgroundColor,\n    tabsContainerHorizontalPadding,\n    tabsContainerStyle,\n  } = tabsProps;\n\n  return React.useCallback(() => {\n    if (!tabs) {\n      return null;\n    }\n\n    return (\n      <Tabs\n        tabs={tabs}\n        activeTab={activeTab}\n        horizontalScrollValue={horizontalScrollValue}\n        onTabPressed={onTabPressed}\n        tabTextActiveStyle={tabTextActiveStyle}\n        tabTextContainerActiveStyle={tabTextContainerActiveStyle}\n        tabTextContainerStyle={tabTextContainerStyle}\n        tabTextStyle={tabTextStyle}\n        tabUnderlineColor={tabUnderlineColor}\n        tabWrapperStyle={tabWrapperStyle}\n        tabsContainerBackgroundColor={tabsContainerBackgroundColor}\n        tabsContainerHorizontalPadding={tabsContainerHorizontalPadding}\n        tabsContainerStyle={tabsContainerStyle}\n      />\n    );\n  }, [\n    activeTab,\n    horizontalScrollValue,\n    onTabPressed,\n    tabTextActiveStyle,\n    tabTextContainerActiveStyle,\n    tabTextContainerStyle,\n    tabTextStyle,\n    tabUnderlineColor,\n    tabWrapperStyle,\n    tabs,\n    tabsContainerBackgroundColor,\n    tabsContainerHorizontalPadding,\n    tabsContainerStyle,\n  ]);\n}\n"]}