var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.useTabbedFlashListHeader=useTabbedFlashListHeader;var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var React=_interopRequireWildcard(require("react"));var _reactNative=require("react-native");var _reactNativeReanimated=require("react-native-reanimated");var _HeaderWrapper=require("../../common/components/HeaderWrapper");var _usePredefinedFlashListHeader=require("../../common/hooks/usePredefinedFlashListHeader");var _debounce=require("../../common/utils/debounce");var _isNotEmpty=require("../../common/utils/isNotEmpty");var _HeaderForeground=require("../components/HeaderForeground");var _useRenderTabs=require("./useRenderTabs");var _jsxFileName="/Users/vagrant/git/src/predefinedComponents/TabbedHeader/hooks/useTabbedFlashListHeader.tsx";function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!=="function")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!=="default"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function useRenderFlashListHeader(props){var _this=this;var _usePredefinedFlashLi=(0,_usePredefinedFlashListHeader.usePredefinedFlashListHeader)(props),contentBackgroundColor=_usePredefinedFlashLi.contentBackgroundColor,innerScrollHeight=_usePredefinedFlashLi.innerScrollHeight,onMomentumScrollEnd=_usePredefinedFlashLi.onMomentumScrollEnd,onScroll=_usePredefinedFlashLi.onScroll,onScrollEndDrag=_usePredefinedFlashLi.onScrollEndDrag,parallaxHeight=_usePredefinedFlashLi.parallaxHeight,scrollHeight=_usePredefinedFlashLi.scrollHeight,scrollValue=_usePredefinedFlashLi.scrollValue,scrollViewRef=_usePredefinedFlashLi.scrollViewRef;var backgroundColor=props.backgroundColor,backgroundImage=props.backgroundImage,foregroundImage=props.foregroundImage,hasBorderRadius=props.hasBorderRadius,tabsContainerBackgroundColor=props.tabsContainerBackgroundColor,title=props.title,titleStyle=props.titleStyle,titleTestID=props.titleTestID;var horizontalScrollValue=(0,_reactNativeReanimated.useSharedValue)(0);var onHorizontalPagerScroll=(0,_reactNativeReanimated.useWorkletCallback)(function(e){horizontalScrollValue.value=e.contentOffset.x;},[]);var renderHeader=React.useCallback(function(){return React.createElement(_HeaderWrapper.HeaderWrapper,{backgroundColor:backgroundColor,backgroundImage:backgroundImage,contentBackgroundColor:contentBackgroundColor,hasBorderRadius:hasBorderRadius,parallaxHeight:parallaxHeight,scrollHeight:scrollHeight,scrollValue:scrollValue,tabsContainerBackgroundColor:tabsContainerBackgroundColor,__self:_this,__source:{fileName:_jsxFileName,lineNumber:48,columnNumber:7}},React.createElement(_HeaderForeground.Foreground,{height:parallaxHeight,scrollValue:scrollValue,foregroundImage:foregroundImage,title:title,titleStyle:titleStyle,titleTestID:titleTestID,__self:_this,__source:{fileName:_jsxFileName,lineNumber:57,columnNumber:9}}));},[backgroundColor,backgroundImage,contentBackgroundColor,foregroundImage,hasBorderRadius,parallaxHeight,scrollHeight,scrollValue,tabsContainerBackgroundColor,title,titleStyle,titleTestID]);return{innerScrollHeight:innerScrollHeight,horizontalScrollValue:horizontalScrollValue,onHorizontalPagerScroll:onHorizontalPagerScroll,onMomentumScrollEnd:onMomentumScrollEnd,onScroll:onScroll,onScrollEndDrag:onScrollEndDrag,renderHeader:renderHeader,scrollHeight:scrollHeight,scrollValue:scrollValue,scrollViewRef:scrollViewRef};}function useTabbedFlashListHeader(props){var _useRenderFlashListHe=useRenderFlashListHeader(props),innerScrollHeight=_useRenderFlashListHe.innerScrollHeight,horizontalScrollValue=_useRenderFlashListHe.horizontalScrollValue,onMomentumScrollEnd=_useRenderFlashListHe.onMomentumScrollEnd,onScroll=_useRenderFlashListHe.onScroll,onScrollEndDrag=_useRenderFlashListHe.onScrollEndDrag,renderHeader=_useRenderFlashListHe.renderHeader,scrollValue=_useRenderFlashListHe.scrollValue,scrollViewRef=_useRenderFlashListHe.scrollViewRef;var _props$stickyHeaderIn=props.stickyHeaderIndices,stickyHeaderIndices=_props$stickyHeaderIn===void 0?[]:_props$stickyHeaderIn,backgroundColor=props.backgroundColor,tabsContainerBackgroundColor=props.tabsContainerBackgroundColor;var _React$useState=React.useState(0),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),activeSection=_React$useState2[0],setActiveSection=_React$useState2[1];var ignoreViewabilityItemsChangedEvent=(0,_reactNativeReanimated.useSharedValue)(false);var onViewableItemsChanged=React.useCallback(function(_ref){var viewableItems=_ref.viewableItems;if(!viewableItems.length||ignoreViewabilityItemsChangedEvent.value||!(0,_isNotEmpty.isNotEmpty)(viewableItems[0].index)){return;}var newActiveSection;for(var i=0;i<stickyHeaderIndices.length;i++){var firstIdx=stickyHeaderIndices[i];if(i===stickyHeaderIndices.length-1){if(viewableItems[0].index>=firstIdx){newActiveSection=i;i=stickyHeaderIndices.length;}}else{var secondIdx=stickyHeaderIndices[i+1];if(viewableItems[0].index>=firstIdx&&viewableItems[0].index<secondIdx){newActiveSection=i;i=stickyHeaderIndices.length;}}}if(typeof newActiveSection==='number'){setActiveSection(newActiveSection);}},[ignoreViewabilityItemsChangedEvent,stickyHeaderIndices]);var goToSection=React.useCallback(function(sectionIndex){var _scrollViewRef$curren;ignoreViewabilityItemsChangedEvent.value=true;(_scrollViewRef$curren=scrollViewRef.current)==null?void 0:_scrollViewRef$curren.scrollToIndex({animated:true,index:stickyHeaderIndices[sectionIndex],viewPosition:0,viewOffset:0});setActiveSection(sectionIndex);},[ignoreViewabilityItemsChangedEvent,scrollViewRef,stickyHeaderIndices]);var onMomentumScrollEndInternal=(0,_reactNativeReanimated.useWorkletCallback)(function(e){ignoreViewabilityItemsChangedEvent.value=false;onMomentumScrollEnd==null?void 0:onMomentumScrollEnd(e);},[onMomentumScrollEnd]);var debouncedIgnoreViewabilityItemsChangedCallback=(0,_debounce.debounce)(function(){ignoreViewabilityItemsChangedEvent.value=false;},100);var onScrollInternal=(0,_reactNativeReanimated.useWorkletCallback)(function(e){if(_reactNative.Platform.OS==='web'){(0,_reactNativeReanimated.runOnJS)(debouncedIgnoreViewabilityItemsChangedCallback)();}onScroll==null?void 0:onScroll(e);},[onScroll]);var renderTabs=(0,_useRenderTabs.useRenderTabs)(Object.assign({},props,{activeTab:activeSection,horizontalScrollValue:horizontalScrollValue,onTabPressed:goToSection,tabsContainerBackgroundColor:tabsContainerBackgroundColor!=null?tabsContainerBackgroundColor:backgroundColor}));return{goToSection:goToSection,innerScrollHeight:innerScrollHeight,onMomentumScrollEnd:onMomentumScrollEndInternal,onScroll:onScrollInternal,onScrollEndDrag:onScrollEndDrag,onViewableItemsChanged:onViewableItemsChanged,renderHeader:renderHeader,renderTabs:renderTabs,scrollValue:scrollValue,scrollViewRef:scrollViewRef};}
//# sourceMappingURL=useTabbedFlashListHeader.js.map