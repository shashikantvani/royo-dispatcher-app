{"version":3,"sources":["HeaderForeground.tsx"],"names":["Foreground","foregroundImage","height","scrollValue","title","titleStyle","titleTestID","responsiveWidth","windowHeight","windowWidth","width","isLandscape","constants","breakpoints","mediumPhoneShorterEdge","profilePicBorderRadius","messageStyle","styles","message","startSize","endSize","startImgFade","finishImgFade","startImgSize","finishImgSize","startTitleFade","finishTitleFade","imageOpacityAnimatedStyle","opacity","value","Extrapolate","CLAMP","imageAnimatedStyle","imageSize","borderRadius","titleAnimatedStyle","landscapeStyle","commonStyles","row","rowReverse","foregroundRow","foreground","column","messageContainer","StyleSheet","create","color","colors","white","fontSize","fontWeight","lineHeight","letterSpacing","textAlign"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport type { ImageSourcePropType, StyleProp, TextStyle, ViewStyle } from 'react-native';\nimport { StyleSheet, View, useWindowDimensions } from 'react-native';\nimport Animated, { Extrapolate, interpolate, useAnimatedStyle } from 'react-native-reanimated';\n\nimport { colors, commonStyles, constants } from '../../../constants';\nimport { useResponsiveSize } from '../../../hooks/useResponsiveSize';\nimport { useRTLStyles } from '../../common/hooks/useRTLStyles';\nimport { scrollPosition } from '../../common/utils/scrollPosition';\n\ninterface ForegroundProps {\n  foregroundImage?: ImageSourcePropType;\n  height: number;\n  scrollValue: Animated.SharedValue<number>;\n  title?: string;\n  titleStyle?: StyleProp<Animated.AnimateStyle<TextStyle>>;\n  titleTestID?: string;\n}\n\nexport const Foreground: React.FC<ForegroundProps> = ({\n  foregroundImage,\n  height,\n  scrollValue,\n  title,\n  titleStyle,\n  titleTestID = 'TabbedHeaderForegroundTitleTestID',\n}) => {\n  const { responsiveWidth } = useResponsiveSize();\n  const { height: windowHeight, width: windowWidth } = useWindowDimensions();\n\n  const isLandscape =\n    windowWidth > windowHeight && windowHeight <= constants.breakpoints.mediumPhoneShorterEdge;\n\n  const profilePicBorderRadius = responsiveWidth(4.5);\n  const messageStyle = [styles.message, titleStyle];\n  const startSize = responsiveWidth(18);\n  const endSize = responsiveWidth(10);\n  const [startImgFade, finishImgFade] = [scrollPosition(height, 22), scrollPosition(height, 27)];\n  const [startImgSize, finishImgSize] = [scrollPosition(height, 20), scrollPosition(height, 30)];\n  const [startTitleFade, finishTitleFade] = [\n    scrollPosition(height, 25),\n    scrollPosition(height, 45),\n  ];\n\n  const imageOpacityAnimatedStyle = useAnimatedStyle(() => {\n    return {\n      opacity: interpolate(\n        scrollValue.value,\n        [0, startImgFade, finishImgFade],\n        [1, 1, 0],\n        Extrapolate.CLAMP\n      ),\n    };\n  }, [scrollValue, startImgFade, finishImgFade]);\n  const imageAnimatedStyle = useAnimatedStyle(() => {\n    const imageSize = interpolate(\n      scrollValue.value,\n      [0, startImgSize, finishImgSize],\n      [startSize, startSize, endSize],\n      Extrapolate.CLAMP\n    );\n\n    return {\n      borderRadius: profilePicBorderRadius,\n      height: imageSize,\n      width: imageSize,\n    };\n  }, [scrollValue, startImgSize, finishImgSize, startSize, endSize, profilePicBorderRadius]);\n  const titleAnimatedStyle = useAnimatedStyle(() => {\n    return {\n      opacity: interpolate(\n        scrollValue.value,\n        [0, startTitleFade, finishTitleFade],\n        [1, 1, 0],\n        Extrapolate.CLAMP\n      ),\n    };\n  }, [scrollValue, startTitleFade, finishTitleFade]);\n\n  const landscapeStyle = useRTLStyles<ViewStyle>(\n    commonStyles.row,\n    commonStyles.rowReverse,\n    commonStyles.row\n  );\n\n  return (\n    <View\n      pointerEvents=\"none\"\n      style={\n        isLandscape\n          ? [commonStyles.foregroundRow, landscapeStyle]\n          : [commonStyles.foreground, commonStyles.column]\n      }>\n      {foregroundImage ? (\n        <Animated.View style={imageOpacityAnimatedStyle}>\n          <Animated.Image source={foregroundImage} style={imageAnimatedStyle} />\n        </Animated.View>\n      ) : null}\n      <Animated.View style={[commonStyles.messageContainer, titleAnimatedStyle]}>\n        <Animated.Text style={messageStyle} testID={titleTestID}>\n          {title}\n        </Animated.Text>\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  message: {\n    color: colors.white,\n    fontSize: 36,\n    fontWeight: '500',\n    lineHeight: 42,\n    letterSpacing: -1,\n    textAlign: 'left',\n  },\n});\n"]}