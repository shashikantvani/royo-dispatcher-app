{"version":3,"sources":["TabItem.tsx"],"names":["TabItem","tab","page","onTabLayout","onTabPress","tabWrapperStyle","tabTextActiveStyle","tabTextContainerActiveStyle","tabTextContainerStyle","tabTextStyle","activeTab","renderIcon","isInvertedAndroid","Platform","OS","I18nManager","isRTL","undefined","isTabActive","tabKey","title","tabTestID","testID","pressed","styles","inversionStyle","tabsWrapper","noMargins","tabContainer","icon","tabText","StyleSheet","create","transform","scaleX","marginHorizontal","paddingHorizontal","opacity","alignItems","flexDirection","justifyContent","fontSize","lineHeight","paddingVertical","color","colors","white","textAlign","flex","backgroundColor","transparent","borderRadius","darkMint"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport type { LayoutChangeEvent } from 'react-native';\nimport { I18nManager, Platform, Pressable, StyleSheet } from 'react-native';\nimport Animated from 'react-native-reanimated';\n\nimport { colors } from '../../../constants';\nimport type { Tab, TabsConfig } from '../../common/SharedProps';\n\ninterface TabItemProps\n  extends Pick<\n    TabsConfig,\n    | 'tabTextActiveStyle'\n    | 'tabTextContainerActiveStyle'\n    | 'tabTextContainerStyle'\n    | 'tabTextStyle'\n    | 'tabWrapperStyle'\n  > {\n  tab: Tab;\n  page: number;\n  activeTab: number;\n  onTabLayout?: (event: LayoutChangeEvent) => void;\n  onTabPress?: () => void;\n  renderIcon: (icon: Tab['icon'], page: number) => React.ReactElement | null | undefined;\n}\n\nexport const TabItem: React.FC<TabItemProps> = ({\n  tab,\n  page,\n  onTabLayout,\n  onTabPress,\n  tabWrapperStyle,\n  tabTextActiveStyle,\n  tabTextContainerActiveStyle,\n  tabTextContainerStyle,\n  tabTextStyle,\n  activeTab,\n  renderIcon,\n}) => {\n  const isInvertedAndroid = Platform.OS === 'android' ? I18nManager.isRTL : undefined;\n  const isTabActive = activeTab === page;\n  const tabKey = tab.title || `tab ${page}`;\n  const tabTestID = tab.testID || `${tabKey}TestID`;\n\n  return (\n    <Pressable\n      accessibilityLabel={tabKey}\n      accessibilityRole=\"button\"\n      key={tabKey}\n      onLayout={onTabLayout}\n      onPress={onTabPress}\n      style={({ pressed }) => [\n        isInvertedAndroid && styles.inversionStyle,\n        styles.tabsWrapper,\n        tabWrapperStyle,\n        styles.noMargins,\n        pressed && styles.pressed,\n      ]}\n      testID={tabTestID}>\n      <Animated.View\n        style={[\n          styles.tabContainer,\n          styles.tabTextContainerStyle,\n          tabTextContainerStyle,\n          isTabActive && styles.tabTextContainerActiveStyle,\n          isTabActive && tabTextContainerActiveStyle,\n        ]}>\n        {renderIcon(tab.icon, page)}\n        {tab.title ? (\n          <Animated.Text style={[styles.tabText, tabTextStyle, isTabActive && tabTextActiveStyle]}>\n            {tab.title}\n          </Animated.Text>\n        ) : null}\n      </Animated.View>\n    </Pressable>\n  );\n};\n\nconst styles = StyleSheet.create({\n  inversionStyle: {\n    transform: [{ scaleX: -1 }],\n  },\n  noMargins: {\n    marginHorizontal: 0,\n    paddingHorizontal: 0,\n  },\n  pressed: {\n    opacity: 0.9,\n  },\n  tabContainer: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  tabText: {\n    fontSize: 16,\n    lineHeight: 20,\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    color: colors.white,\n    textAlign: 'left',\n  },\n  tabsWrapper: {\n    flex: 1,\n    paddingVertical: 12,\n  },\n  tabTextContainerStyle: {\n    backgroundColor: colors.transparent,\n    borderRadius: 18,\n  },\n  tabTextContainerActiveStyle: {\n    backgroundColor: colors.darkMint,\n  },\n});\n"]}