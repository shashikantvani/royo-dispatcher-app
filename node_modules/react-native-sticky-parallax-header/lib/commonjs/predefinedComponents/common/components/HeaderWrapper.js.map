{"version":3,"sources":["HeaderWrapper.tsx"],"names":["HeaderWrapper","backgroundColor","backgroundImage","children","contentBackgroundColor","hasBorderRadius","parallaxHeight","scrollHeight","scrollValue","tabsContainerBackgroundColor","width","hasBackgroundImage","contentAnimatedStyle","foregroundAnimatedStyle","colors","transparent","styles","headerStyle","height","StyleSheet","create","position","left","top","alignItems","justifyContent"],"mappings":"sFAAA,oDAEA,yCACA,uFAEA,6CAEA,uEAEA,oDACA,8D,wmCAaO,GAAMA,CAAAA,aAAoE,CAAG,QAAvEA,CAAAA,aAAuE,MAU9E,IATJC,CAAAA,eASI,MATJA,eASI,CARJC,eAQI,MARJA,eAQI,CAPJC,QAOI,MAPJA,QAOI,CANJC,sBAMI,MANJA,sBAMI,CALJC,eAKI,MALJA,eAKI,CAJJC,cAII,MAJJA,cAII,CAHJC,YAGI,MAHJA,YAGI,CAFJC,WAEI,MAFJA,WAEI,CADJC,4BACI,MADJA,4BACI,CACJ,yBAAkB,sCAAlB,CAAQC,KAAR,sBAAQA,KAAR,CACA,GAAMC,CAAAA,kBAAkB,CAAG,CAAC,CAACT,eAA7B,CACA,GAAMU,CAAAA,oBAAoB,CAAG,4CAAiB,UAAM,CAElD,MAAO,CAAEX,eAAe,CAAE,mDAAuBG,sBAAvB,CAAnB,CAAP,CACD,CAH4B,CAG1B,CAACA,sBAAD,CAH0B,CAA7B,CAIA,GAAMS,CAAAA,uBAAuB,CAAG,4CAAiB,UAAM,CACrD,GAAIF,kBAAJ,CAAwB,CACtB,MAAO,CAAEV,eAAe,CAAEa,kBAAOC,WAA1B,CAAP,CACD,CAED,MAAO,CACLd,eAAe,CAAE,mDAAuBQ,4BAAvB,CADZ,CAAP,CAGD,CAR+B,CAQ7B,CAACE,kBAAD,CAAqBF,4BAArB,CAR6B,CAAhC,CAUA,MACE,qBAAC,8BAAD,CAAU,IAAV,EAAe,aAAa,CAAC,UAA7B,CAAwC,KAAK,CAAEG,oBAA/C,6EACGV,eAAe,CACd,oBAAC,iBAAD,EAAM,aAAa,CAAC,MAApB,6EACE,oBAAC,4CAAD,EACE,UAAU,CACR,oBAAC,kCAAD,EACE,eAAe,CAAED,eADnB,CAEE,eAAe,CAAEI,eAFnB,CAGE,MAAM,CAAEC,cAHV,CAIE,WAAW,CAAEE,WAJf,8EAFJ,CASE,gBAAgB,CAAED,YATpB,CAUE,eAAe,CAAEL,eAVnB,8EADF,CADc,CAgBd,oBAAC,iBAAD,EACE,aAAa,CAAC,MADhB,CAEE,KAAK,CAAE,CAACc,MAAM,CAACC,WAAR,CAAqB,CAAEC,MAAM,CAAEX,YAAV,CAArB,CAA+C,CAAEG,KAAK,CAALA,KAAF,CAA/C,CAFT,6EAGE,oBAAC,kCAAD,EACE,eAAe,CAAET,eADnB,CAEE,eAAe,CAAEI,eAFnB,CAGE,MAAM,CAAEC,cAHV,CAIE,WAAW,CAAEE,WAJf,8EAHF,CAjBJ,CA4BE,oBAAC,8BAAD,CAAU,IAAV,EACE,aAAa,CAAC,UADhB,CAEE,KAAK,CAAE,CACL,CACEU,MAAM,CAAEX,YADV,CADK,CAILM,uBAJK,CAFT,CAQE,MAAM,CAAC,kBART,6EASGV,QATH,CA5BF,CADF,CA0CD,CArEM,C,oCAuEP,GAAMa,CAAAA,MAAM,CAAGG,wBAAWC,MAAX,CAAkB,CAC/BH,WAAW,CAAE,CACXI,QAAQ,CAAE,UADC,CAEXC,IAAI,CAAE,CAFK,CAGXC,GAAG,CAAE,CAHM,CAIXC,UAAU,CAAE,YAJD,CAKXC,cAAc,CAAE,UALL,CADkB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport type { ImageSourcePropType } from 'react-native';\nimport { StyleSheet, View, useWindowDimensions } from 'react-native';\nimport Animated, { useAnimatedStyle } from 'react-native-reanimated';\n\nimport { colors } from '../../../constants';\nimport type { AnimatedColorProp } from '../SharedProps';\nimport { parseAnimatedColorProp } from '../utils/parseAnimatedColorProp';\n\nimport { HeaderBackground } from './HeaderBackground';\nimport { HeaderBackgroundImage } from './HeaderBackgroundImage';\n\ninterface HeaderWrapperProps {\n  backgroundColor?: AnimatedColorProp;\n  backgroundImage?: ImageSourcePropType;\n  contentBackgroundColor?: AnimatedColorProp;\n  hasBorderRadius?: boolean;\n  parallaxHeight: number;\n  scrollHeight: number;\n  scrollValue: Animated.SharedValue<number>;\n  tabsContainerBackgroundColor?: AnimatedColorProp;\n}\n\nexport const HeaderWrapper: React.FC<React.PropsWithChildren<HeaderWrapperProps>> = ({\n  backgroundColor,\n  backgroundImage,\n  children,\n  contentBackgroundColor,\n  hasBorderRadius,\n  parallaxHeight,\n  scrollHeight,\n  scrollValue,\n  tabsContainerBackgroundColor,\n}) => {\n  const { width } = useWindowDimensions();\n  const hasBackgroundImage = !!backgroundImage;\n  const contentAnimatedStyle = useAnimatedStyle(() => {\n    // TypeScript complains about AnimatedNode<StyleProp<ViewStyle>> from reanimated v1\n    return { backgroundColor: parseAnimatedColorProp(contentBackgroundColor) as string };\n  }, [contentBackgroundColor]);\n  const foregroundAnimatedStyle = useAnimatedStyle(() => {\n    if (hasBackgroundImage) {\n      return { backgroundColor: colors.transparent };\n    }\n\n    return {\n      backgroundColor: parseAnimatedColorProp(tabsContainerBackgroundColor),\n    };\n  }, [hasBackgroundImage, tabsContainerBackgroundColor]);\n\n  return (\n    <Animated.View pointerEvents=\"box-none\" style={contentAnimatedStyle}>\n      {backgroundImage ? (\n        <View pointerEvents=\"none\">\n          <HeaderBackgroundImage\n            background={\n              <HeaderBackground\n                backgroundColor={backgroundColor}\n                hasBorderRadius={hasBorderRadius}\n                height={parallaxHeight}\n                scrollValue={scrollValue}\n              />\n            }\n            backgroundHeight={scrollHeight}\n            backgroundImage={backgroundImage}\n          />\n        </View>\n      ) : (\n        <View\n          pointerEvents=\"none\"\n          style={[styles.headerStyle, { height: scrollHeight }, { width }]}>\n          <HeaderBackground\n            backgroundColor={backgroundColor}\n            hasBorderRadius={hasBorderRadius}\n            height={parallaxHeight}\n            scrollValue={scrollValue}\n          />\n        </View>\n      )}\n      <Animated.View\n        pointerEvents=\"box-none\"\n        style={[\n          {\n            height: scrollHeight,\n          },\n          foregroundAnimatedStyle,\n        ]}\n        testID=\"HeaderForeground\">\n        {children}\n      </Animated.View>\n    </Animated.View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  headerStyle: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-end',\n  },\n});\n"]}