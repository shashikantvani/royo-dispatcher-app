{"version":3,"sources":["usePredefinedFlashListHeader.tsx"],"names":["usePredefinedFlashListHeader","props","height","responsiveHeight","onMomentumScrollEnd","onScroll","onScrollEndDrag","scrollHeight","scrollValue","scrollViewRef","contentContainerStyle","headerHeight","parallaxHeight","innerScrollHeight","contentContainerFlattenedStyle","StyleSheet","flatten","contentBackgroundColor","backgroundColor"],"mappings":"2HACA,4BACA,yCAEA,oEACA,qHAIO,QAASA,CAAAA,4BAAT,CACLC,KADK,CAEL,CACA,yBAAmB,sCAAnB,CAAQC,MAAR,sBAAQA,MAAR,CACA,uBAA6B,2CAA7B,CAAQC,gBAAR,oBAAQA,gBAAR,CAEA,0BAOI,6EAAuCF,KAAvC,CAPJ,CACEG,mBADF,uBACEA,mBADF,CAEEC,QAFF,uBAEEA,QAFF,CAGEC,eAHF,uBAGEA,eAHF,CAIEC,YAJF,uBAIEA,YAJF,CAKEC,WALF,uBAKEA,WALF,CAMEC,aANF,uBAMEA,aANF,CASA,GACEC,CAAAA,qBADF,CAIIT,KAJJ,CACES,qBADF,qBAIIT,KAJJ,CAEEU,YAFF,CAEEA,YAFF,8BAEiB,GAFjB,2CAIIV,KAJJ,CAGEW,cAHF,CAGEA,cAHF,gCAGmBT,gBAAgB,CAAC,EAAD,CAHnC,uBAMA,GAAMU,CAAAA,iBAAiB,CAAGX,MAAM,CAAGS,YAAT,CAAwBC,cAAlD,CAEA,aAAmC,mBAAQ,UAAM,CAC/C,GAAME,CAAAA,8BAA8B,CAAGC,wBAAWC,OAAX,CAAmBN,qBAAnB,CAAvC,CAEA,MAAO,CAAEO,sBAAsB,CAAEH,8BAAF,cAAEA,8BAA8B,CAAEI,eAA1D,CAAP,CACD,CAJkC,CAIhC,CAACR,qBAAD,CAJgC,CAAnC,CAAQO,sBAAR,UAAQA,sBAAR,CAMA,MAAO,CACLA,sBAAsB,CAAtBA,sBADK,CAELJ,iBAAiB,CAAjBA,iBAFK,CAGLT,mBAAmB,CAAnBA,mBAHK,CAILC,QAAQ,CAARA,QAJK,CAKLC,eAAe,CAAfA,eALK,CAMLM,cAAc,CAAdA,cANK,CAOLL,YAAY,CAAZA,YAPK,CAQLC,WAAW,CAAXA,WARK,CASLC,aAAa,CAAbA,aATK,CAAP,CAWD","sourcesContent":["import type { FlashList } from '@shopify/flash-list';\nimport { useMemo } from 'react';\nimport { StyleSheet, useWindowDimensions } from 'react-native';\n\nimport { useResponsiveSize } from '../../../hooks/useResponsiveSize';\nimport { useStickyHeaderFlashListScrollProps } from '../../../primitiveComponents/useStickyHeaderFlashListScrollProps';\nimport type { SharedPredefinedProps } from '../SharedProps';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function usePredefinedFlashListHeader<T extends FlashList<any>>(\n  props: SharedPredefinedProps\n) {\n  const { height } = useWindowDimensions();\n  const { responsiveHeight } = useResponsiveSize();\n\n  const {\n    onMomentumScrollEnd,\n    onScroll,\n    onScrollEndDrag,\n    scrollHeight,\n    scrollValue,\n    scrollViewRef,\n  } = useStickyHeaderFlashListScrollProps<T>(props);\n\n  const {\n    contentContainerStyle,\n    headerHeight = 100,\n    parallaxHeight = responsiveHeight(53),\n  } = props;\n\n  const innerScrollHeight = height - headerHeight - parallaxHeight;\n\n  const { contentBackgroundColor } = useMemo(() => {\n    const contentContainerFlattenedStyle = StyleSheet.flatten(contentContainerStyle);\n\n    return { contentBackgroundColor: contentContainerFlattenedStyle?.backgroundColor };\n  }, [contentContainerStyle]);\n\n  return {\n    contentBackgroundColor,\n    innerScrollHeight,\n    onMomentumScrollEnd,\n    onScroll,\n    onScrollEndDrag,\n    parallaxHeight,\n    scrollHeight,\n    scrollValue,\n    scrollViewRef,\n  };\n}\n"]}