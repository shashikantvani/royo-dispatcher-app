Object.defineProperty(exports,"__esModule",{value:true});exports.usePredefinedHeader=usePredefinedHeader;var _react=require("react");var _reactNative=require("react-native");var _useResponsiveSize2=require("../../../hooks/useResponsiveSize");var _useStickyHeaderScrollProps=require("../../../primitiveComponents/useStickyHeaderScrollProps");function usePredefinedHeader(props){var _useWindowDimensions=(0,_reactNative.useWindowDimensions)(),height=_useWindowDimensions.height;var _useResponsiveSize=(0,_useResponsiveSize2.useResponsiveSize)(),responsiveHeight=_useResponsiveSize.responsiveHeight;var _useStickyHeaderScrol=(0,_useStickyHeaderScrollProps.useStickyHeaderScrollProps)(props),onMomentumScrollEnd=_useStickyHeaderScrol.onMomentumScrollEnd,onScroll=_useStickyHeaderScrol.onScroll,onScrollEndDrag=_useStickyHeaderScrol.onScrollEndDrag,scrollHeight=_useStickyHeaderScrol.scrollHeight,scrollValue=_useStickyHeaderScrol.scrollValue,scrollViewRef=_useStickyHeaderScrol.scrollViewRef;var contentContainerStyle=props.contentContainerStyle,_props$headerHeight=props.headerHeight,headerHeight=_props$headerHeight===void 0?100:_props$headerHeight,_props$parallaxHeight=props.parallaxHeight,parallaxHeight=_props$parallaxHeight===void 0?responsiveHeight(53):_props$parallaxHeight;var innerScrollHeight=height-headerHeight-parallaxHeight;var _useMemo=(0,_react.useMemo)(function(){var contentContainerFlattenedStyle=_reactNative.StyleSheet.flatten(contentContainerStyle);return{contentBackgroundColor:contentContainerFlattenedStyle==null?void 0:contentContainerFlattenedStyle.backgroundColor};},[contentContainerStyle]),contentBackgroundColor=_useMemo.contentBackgroundColor;return{contentBackgroundColor:contentBackgroundColor,innerScrollHeight:innerScrollHeight,onMomentumScrollEnd:onMomentumScrollEnd,onScroll:onScroll,onScrollEndDrag:onScrollEndDrag,parallaxHeight:parallaxHeight,scrollHeight:scrollHeight,scrollValue:scrollValue,scrollViewRef:scrollViewRef};}
//# sourceMappingURL=usePredefinedHeader.js.map