{"version":3,"sources":["useAvatarHeader.tsx"],"names":["useAvatarHeader","props","contentBackgroundColor","onMomentumScrollEnd","onScroll","onScrollEndDrag","parallaxHeight","scrollHeight","scrollValue","scrollViewRef","backgroundColor","backgroundImage","hasBorderRadius","image","subtitle","subtitleStyle","subtitleTestID","tabsContainerBackgroundColor","title","titleStyle","titleTestID","renderHeader","React","useCallback"],"mappings":"iGAAA,oDAGA,oEACA,4EAEA,gE,gmCAEO,QAASA,CAAAA,eAAT,CAAoDC,KAApD,CAAwF,gBAC7F,yBASI,8CAAuBA,KAAvB,CATJ,CACEC,sBADF,sBACEA,sBADF,CAEEC,mBAFF,sBAEEA,mBAFF,CAGEC,QAHF,sBAGEA,QAHF,CAIEC,eAJF,sBAIEA,eAJF,CAKEC,cALF,sBAKEA,cALF,CAMEC,YANF,sBAMEA,YANF,CAOEC,WAPF,sBAOEA,WAPF,CAQEC,aARF,sBAQEA,aARF,CAUA,GACEC,CAAAA,eADF,CAYIT,KAZJ,CACES,eADF,CAEEC,eAFF,CAYIV,KAZJ,CAEEU,eAFF,CAGEC,eAHF,CAYIX,KAZJ,CAGEW,eAHF,CAIEC,KAJF,CAYIZ,KAZJ,CAIEY,KAJF,CAKEC,QALF,CAYIb,KAZJ,CAKEa,QALF,CAMEC,aANF,CAYId,KAZJ,CAMEc,aANF,CAOEC,cAPF,CAYIf,KAZJ,CAOEe,cAPF,CAQEC,4BARF,CAYIhB,KAZJ,CAQEgB,4BARF,CASEC,KATF,CAYIjB,KAZJ,CASEiB,KATF,CAUEC,UAVF,CAYIlB,KAZJ,CAUEkB,UAVF,CAWEC,WAXF,CAYInB,KAZJ,CAWEmB,WAXF,CAcA,GAAMC,CAAAA,YAAY,CAAGC,KAAK,CAACC,WAAN,CAAkB,UAAM,CAC3C,MACE,qBAAC,4BAAD,EACE,eAAe,CAAEb,eADnB,CAEE,eAAe,CAAEC,eAFnB,CAGE,sBAAsB,CAAET,sBAH1B,CAIE,eAAe,CAAEU,eAJnB,CAKE,cAAc,CAAEN,cALlB,CAME,YAAY,CAAEC,YANhB,CAOE,WAAW,CAAEC,WAPf,CAQE,4BAA4B,CAAES,4BARhC,6EASE,oBAAC,4BAAD,EACE,MAAM,CAAEX,cADV,CAEE,WAAW,CAAEE,WAFf,CAGE,KAAK,CAAEK,KAHT,CAIE,QAAQ,CAAEC,QAJZ,CAKE,aAAa,CAAEC,aALjB,CAME,cAAc,CAAEC,cANlB,CAOE,KAAK,CAAEE,KAPT,CAQE,UAAU,CAAEC,UARd,CASE,WAAW,CAAEC,WATf,6EATF,CADF,CAuBD,CAxBoB,CAwBlB,CACDV,eADC,CAEDC,eAFC,CAGDT,sBAHC,CAIDU,eAJC,CAKDC,KALC,CAMDP,cANC,CAODC,YAPC,CAQDC,WARC,CASDM,QATC,CAUDC,aAVC,CAWDC,cAXC,CAYDC,4BAZC,CAaDC,KAbC,CAcDC,UAdC,CAeDC,WAfC,CAxBkB,CAArB,CA0CA,MAAO,CACLjB,mBAAmB,CAAnBA,mBADK,CAELC,QAAQ,CAARA,QAFK,CAGLC,eAAe,CAAfA,eAHK,CAILC,cAAc,CAAdA,cAJK,CAKLe,YAAY,CAAZA,YALK,CAMLb,WAAW,CAAXA,WANK,CAOLC,aAAa,CAAbA,aAPK,CAAP,CASD","sourcesContent":["import * as React from 'react';\n\nimport type { ScrollComponent } from '../../common/SharedProps';\nimport { HeaderWrapper } from '../../common/components/HeaderWrapper';\nimport { usePredefinedHeader } from '../../common/hooks/usePredefinedHeader';\nimport type { AvatarHeaderScrollViewProps } from '../AvatarHeaderProps';\nimport { Foreground } from '../components/HeaderForeground';\n\nexport function useAvatarHeader<T extends ScrollComponent>(props: AvatarHeaderScrollViewProps) {\n  const {\n    contentBackgroundColor,\n    onMomentumScrollEnd,\n    onScroll,\n    onScrollEndDrag,\n    parallaxHeight,\n    scrollHeight,\n    scrollValue,\n    scrollViewRef,\n  } = usePredefinedHeader<T>(props);\n  const {\n    backgroundColor,\n    backgroundImage,\n    hasBorderRadius,\n    image,\n    subtitle,\n    subtitleStyle,\n    subtitleTestID,\n    tabsContainerBackgroundColor,\n    title,\n    titleStyle,\n    titleTestID,\n  } = props;\n\n  const renderHeader = React.useCallback(() => {\n    return (\n      <HeaderWrapper\n        backgroundColor={backgroundColor}\n        backgroundImage={backgroundImage}\n        contentBackgroundColor={contentBackgroundColor}\n        hasBorderRadius={hasBorderRadius}\n        parallaxHeight={parallaxHeight}\n        scrollHeight={scrollHeight}\n        scrollValue={scrollValue}\n        tabsContainerBackgroundColor={tabsContainerBackgroundColor}>\n        <Foreground\n          height={parallaxHeight}\n          scrollValue={scrollValue}\n          image={image}\n          subtitle={subtitle}\n          subtitleStyle={subtitleStyle}\n          subtitleTestID={subtitleTestID}\n          title={title}\n          titleStyle={titleStyle}\n          titleTestID={titleTestID}\n        />\n      </HeaderWrapper>\n    );\n  }, [\n    backgroundColor,\n    backgroundImage,\n    contentBackgroundColor,\n    hasBorderRadius,\n    image,\n    parallaxHeight,\n    scrollHeight,\n    scrollValue,\n    subtitle,\n    subtitleStyle,\n    subtitleTestID,\n    tabsContainerBackgroundColor,\n    title,\n    titleStyle,\n    titleTestID,\n  ]);\n\n  return {\n    onMomentumScrollEnd,\n    onScroll,\n    onScrollEndDrag,\n    parallaxHeight,\n    renderHeader,\n    scrollValue,\n    scrollViewRef,\n  };\n}\n"]}