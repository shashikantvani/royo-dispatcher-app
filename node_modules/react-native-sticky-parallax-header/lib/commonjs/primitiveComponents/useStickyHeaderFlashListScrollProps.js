Object.defineProperty(exports,"__esModule",{value:true});exports.useStickyHeaderFlashListScrollProps=useStickyHeaderFlashListScrollProps;var _react=require("react");var _reactNative=require("react-native");var _reactNativeReanimated=require("react-native-reanimated");var _useResponsiveSize2=require("../hooks/useResponsiveSize");var VELOCITY_THRESHOLD=7;function useStickyHeaderFlashListScrollProps(props){var _useResponsiveSize=(0,_useResponsiveSize2.useResponsiveSize)(),responsiveHeight=_useResponsiveSize.responsiveHeight;var _props$headerHeight=props.headerHeight,headerHeight=_props$headerHeight===void 0?100:_props$headerHeight,onMomentumScrollEnd=props.onMomentumScrollEnd,onScroll=props.onScroll,onScrollEndDrag=props.onScrollEndDrag,onTopReached=props.onTopReached,_props$parallaxHeight=props.parallaxHeight,parallaxHeight=_props$parallaxHeight===void 0?responsiveHeight(53):_props$parallaxHeight,snapStartThreshold=props.snapStartThreshold,snapStopThreshold=props.snapStopThreshold,_props$snapToEdge=props.snapToEdge,snapToEdge=_props$snapToEdge===void 0?true:_props$snapToEdge;var scrollValue=(0,_reactNativeReanimated.useSharedValue)(0);var scrollViewRef=(0,_reactNativeReanimated.useAnimatedRef)();var onTopReachedRef=(0,_react.useRef)(onTopReached);var onTopReachedWasCalled=(0,_react.useRef)(false);(0,_react.useEffect)(function(){onTopReachedRef.current=onTopReached;},[onTopReached]);function maybeTopReached(value){if(value<=0){if(!onTopReachedWasCalled.current&&onTopReachedRef.current){onTopReachedRef.current();onTopReachedWasCalled.current=true;}}else{onTopReachedWasCalled.current=false;}}(0,_reactNativeReanimated.useAnimatedReaction)(function(){return scrollValue.value;},function(value){(0,_reactNativeReanimated.runOnJS)(maybeTopReached)(value);},[scrollValue]);var scrollHeight=Math.max(parallaxHeight,headerHeight*2);var snapToTop=(0,_react.useCallback)(function(){var _scrollViewRef$curren;(_scrollViewRef$curren=scrollViewRef.current)==null?void 0:_scrollViewRef$curren.scrollToOffset({animated:true,offset:0});},[scrollViewRef]);var snapToBottom=(0,_react.useCallback)(function(){var _scrollViewRef$curren2;(_scrollViewRef$curren2=scrollViewRef.current)==null?void 0:_scrollViewRef$curren2.scrollToOffset({animated:true,offset:scrollHeight});},[scrollHeight,scrollViewRef]);var onSnapToEdge=(0,_reactNativeReanimated.useWorkletCallback)(function(e){var _e$velocity$y,_e$velocity;var scrollToHeight=snapStopThreshold!=null?snapStopThreshold:scrollHeight;var snapToEdgeThreshold=snapStartThreshold!=null?snapStartThreshold:scrollHeight/2;var currentVal=scrollValue.value;var velocity=(_e$velocity$y=(_e$velocity=e.velocity)==null?void 0:_e$velocity.y)!=null?_e$velocity$y:0;var dragsToTop=velocity>=0;var dragsToBottom=!dragsToTop;var dragsQuickToBottom=dragsToBottom&&velocity<=-VELOCITY_THRESHOLD;var dragsQuickToTop=dragsToTop&&velocity>=VELOCITY_THRESHOLD;var isUnderSnapToEdgeThresholdAndDragIsSlow=currentVal>0&&currentVal<snapToEdgeThreshold&&!dragsQuickToBottom;var isUnderSnapToEdgeThresholdAndDragIsQuick=currentVal>=snapToEdgeThreshold/2&&currentVal<snapToEdgeThreshold&&dragsQuickToBottom;var isOverSnapToEdgeThresholdAndDragIsSlow=currentVal>=snapToEdgeThreshold&&currentVal<scrollToHeight&&!dragsQuickToTop;var isOverSnapToEdgeThresholdAndDragIsQuick=currentVal>=snapToEdgeThreshold&&currentVal<scrollToHeight/2&&dragsQuickToTop;if(snapToEdge){if(isUnderSnapToEdgeThresholdAndDragIsSlow||isOverSnapToEdgeThresholdAndDragIsQuick){(0,_reactNativeReanimated.runOnJS)(snapToTop)();}else if(isOverSnapToEdgeThresholdAndDragIsSlow||isUnderSnapToEdgeThresholdAndDragIsQuick){(0,_reactNativeReanimated.runOnJS)(snapToBottom)();}}},[snapStartThreshold,snapStopThreshold,snapToBottom,snapToTop,snapToEdge,scrollHeight,scrollValue]);var onMomentumScrollEndInternal=(0,_reactNativeReanimated.useWorkletCallback)(function(e){onMomentumScrollEnd==null?void 0:onMomentumScrollEnd(e);onSnapToEdge(e);},[onMomentumScrollEnd,onSnapToEdge]);var onScrollEndDragInternal=(0,_reactNativeReanimated.useWorkletCallback)(function(e){var _e$velocity$y2,_e$velocity2;onScrollEndDrag==null?void 0:onScrollEndDrag(e);if(_reactNative.Platform.OS==='android'||Math.abs((_e$velocity$y2=(_e$velocity2=e.velocity)==null?void 0:_e$velocity2.y)!=null?_e$velocity$y2:0)>0){return;}onSnapToEdge(e);},[onScrollEndDrag,onSnapToEdge]);var onScrollInternal=(0,_reactNativeReanimated.useWorkletCallback)(function(e){scrollValue.value=e.contentOffset.y;onScroll==null?void 0:onScroll(e);},[onScroll]);return{onMomentumScrollEnd:onMomentumScrollEndInternal,onScroll:onScrollInternal,onScrollEndDrag:onScrollEndDragInternal,scrollHeight:scrollHeight,scrollValue:scrollValue,scrollViewRef:scrollViewRef};}
//# sourceMappingURL=useStickyHeaderFlashListScrollProps.js.map