{"version":3,"sources":["useStickyHeaderProps.ts"],"names":["useStickyHeaderProps","props","contentContainerStyle","onHeaderLayout","onMomentumScrollBegin","onMomentumScrollEnd","onScroll","onScrollBeginDrag","onScrollEndDrag","onTabsLayout","stickyTabs","style","headerHeight","setHeaderHeight","tabsHeight","setTabsHeight","scrollValue","onHeaderLayoutInternal","e","nativeEvent","layout","height","onTabsLayoutInternal","scrollHandler","onBeginDrag","onEndDrag","onMomentumBegin","onMomentumEnd","value","contentOffset","y","contentContainerPaddingTop","paddingTop","StyleSheet","flatten","contentContainerPaddingBottom","paddingBottom","listPaddingTop","headerAnimatedStyle","transform","translateY","Extrapolate","CLAMP","EXTEND"],"mappings":"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","sourcesContent":["import { useMemo, useState } from 'react';\nimport type { LayoutChangeEvent } from 'react-native';\nimport { StyleSheet } from 'react-native';\nimport {\n  Extrapolate,\n  interpolate,\n  useAnimatedScrollHandler,\n  useAnimatedStyle,\n  useSharedValue,\n} from 'react-native-reanimated';\n\nimport type {\n  StickyHeaderFlatListProps,\n  StickyHeaderScrollViewProps,\n  StickyHeaderSectionListProps,\n} from './StickyHeaderProps';\n\nexport function useStickyHeaderProps(\n  props:\n    | StickyHeaderFlatListProps<unknown>\n    | StickyHeaderScrollViewProps\n    | StickyHeaderSectionListProps<unknown, unknown>\n) {\n  const {\n    contentContainerStyle,\n    onHeaderLayout,\n    onMomentumScrollBegin,\n    onMomentumScrollEnd,\n    onScroll,\n    onScrollBeginDrag,\n    onScrollEndDrag,\n    onTabsLayout,\n    stickyTabs = true,\n    style,\n  } = props;\n\n  const [headerHeight, setHeaderHeight] = useState(0);\n  const [tabsHeight, setTabsHeight] = useState(0);\n\n  const scrollValue = useSharedValue(0);\n\n  function onHeaderLayoutInternal(e: LayoutChangeEvent) {\n    setHeaderHeight(e.nativeEvent.layout.height);\n    onHeaderLayout?.(e);\n  }\n\n  function onTabsLayoutInternal(e: LayoutChangeEvent) {\n    setTabsHeight(e.nativeEvent.layout.height);\n    onTabsLayout?.(e);\n  }\n\n  const scrollHandler = useAnimatedScrollHandler({\n    onBeginDrag: (e) => {\n      onScrollBeginDrag?.(e);\n    },\n    onEndDrag: (e) => {\n      onScrollEndDrag?.(e);\n    },\n    onMomentumBegin: (e) => {\n      onMomentumScrollBegin?.(e);\n    },\n    onMomentumEnd: (e) => {\n      onMomentumScrollEnd?.(e);\n    },\n    onScroll: (e) => {\n      scrollValue.value = e.contentOffset.y;\n      onScroll?.(e);\n    },\n  });\n\n  const contentContainerPaddingTop = useMemo(() => {\n    const paddingTop = StyleSheet.flatten(contentContainerStyle)?.paddingTop;\n\n    if (typeof paddingTop === 'number') {\n      return paddingTop;\n    }\n\n    // We do not support string values\n    return 0;\n  }, [contentContainerStyle]);\n\n  const contentContainerPaddingBottom = useMemo(() => {\n    const paddingBottom = StyleSheet.flatten(contentContainerStyle)?.paddingBottom;\n\n    if (typeof paddingBottom === 'number') {\n      return paddingBottom;\n    }\n\n    // We do not support string values\n    return 0;\n  }, [contentContainerStyle]);\n\n  const listPaddingTop = useMemo(() => {\n    const paddingTop = StyleSheet.flatten(style)?.paddingTop;\n\n    if (typeof paddingTop === 'number') {\n      return paddingTop;\n    }\n\n    // We do not support string values\n    return 0;\n  }, [style]);\n\n  const headerAnimatedStyle = useAnimatedStyle(() => {\n    return {\n      transform: [\n        {\n          translateY: interpolate(\n            scrollValue.value,\n            [0, headerHeight],\n            [0, -headerHeight],\n            stickyTabs ? Extrapolate.CLAMP : Extrapolate.EXTEND\n          ),\n        },\n      ],\n    };\n  }, [scrollValue, headerHeight, stickyTabs]);\n\n  return {\n    contentContainerPaddingTop,\n    contentContainerPaddingBottom,\n    headerAnimatedStyle,\n    headerHeight,\n    listPaddingTop,\n    onHeaderLayoutInternal,\n    onTabsLayoutInternal,\n    scrollHandler,\n    tabsHeight,\n  };\n}\n"]}