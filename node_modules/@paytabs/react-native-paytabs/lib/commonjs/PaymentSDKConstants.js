"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
class PaymentSDKConstants {}
exports.default = PaymentSDKConstants;
_defineProperty(PaymentSDKConstants, "TokeniseType", {
  none: 'none',
  merchantMandatory: 'merchantMandatory',
  userMandatory: 'userMandatory',
  userOptional: 'userOptional',
  userOptionalDefaultOn: 'userOptionalDefaultOn'
});
_defineProperty(PaymentSDKConstants, "TokeniseFormat", {
  none: '1',
  hex32: '2',
  alphaNum20: '3',
  digit22: '3',
  digit16: '5',
  alphaNum32: '6'
});
_defineProperty(PaymentSDKConstants, "TransactionType", {
  sale: 'sale',
  authorize: 'auth'
});
_defineProperty(PaymentSDKConstants, "TransactionClass", {
  ecom: 'ecom',
  recurring: 'recur'
});
_defineProperty(PaymentSDKConstants, "AlternativePaymentMethod", {
  unionPay: 'unionpay',
  stcPay: 'stcpay',
  valu: 'valu',
  meezaQR: 'meezaqr',
  omannet: 'omannet',
  knetCredit: 'knetcredit',
  knetDebit: 'knetdebit',
  fawry: 'fawry',
  aman: 'aman',
  urpay: "urpay",
  applePay: "applePay",
  souhoola: "souhoola",
  tabby: "tabby"
});
//# sourceMappingURL=PaymentSDKConstants.js.map